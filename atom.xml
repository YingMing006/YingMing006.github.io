<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yingming&#39;s Blog</title>
  
  <subtitle>积跬步，至千里</subtitle>
  <link href="https://yingming006.cn/atom.xml" rel="self"/>
  
  <link href="https://yingming006.cn/"/>
  <updated>2021-03-15T04:56:55.000Z</updated>
  <id>https://yingming006.cn/</id>
  
  <author>
    <name>Yingming</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Java基础】Java集合框架（一）概览</title>
    <link href="https://yingming006.cn/java-collections-overview/"/>
    <id>https://yingming006.cn/java-collections-overview/</id>
    <published>2021-03-15T04:56:55.000Z</published>
    <updated>2021-03-15T04:56:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="https://img-blog.csdnimg.cn/20190515130837158.gif" alt="Java集合框架"></p><p>从图中可以看出，Java集合框架主要包括两种类型的容器，一种是<strong>Collection</strong>，存储对象的集合，另一种是<strong>Map</strong>，存储键值对映射表。Collection 接口又有3种子接口，List、Set和Queue。</p><a id="more"></a><h3 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h3><p><img data-src="https://img-blog.csdnimg.cn/20190515130850462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01TaG93MDA2,size_16,color_FFFFFF,t_70" alt="Collection"></p><h4 id="List-接口"><a href="#List-接口" class="headerlink" title="List 接口"></a>List 接口</h4><p>实现 List 接口的数据结构允许重复元素，可通过索引访问元素，例如 LinkedList、ArrayList、Vector</p><p>常用实现类：</p><ul><li>ArrayList：允许重复元素，底层数据结构可变数组。</li><li>Vector：和 ArrayList 类似，但它是线程安全的。</li><li>LinkedList：允许重复元素，底层数据结构双链表。</li></ul><h4 id="Set-接口"><a href="#Set-接口" class="headerlink" title="Set 接口"></a>Set 接口</h4><p>实现 Set 接口的数据结构不允许重复的元素，例如 HashSet、LinkedHashSet</p><p>常用实现类：</p><ul><li><p>HashSet：不允许重复的元素，底层数据结构 hash table。</p></li><li><p>LinkedHashSet：不允许重复的元素，底层数据结构 hash table 与双链表。</p></li><li><p>TreeSet：不允许重复的元素，底层数据结构红黑树。</p></li></ul><h4 id="Queue-接口"><a href="#Queue-接口" class="headerlink" title="Queue 接口"></a>Queue 接口</h4><p>常用实现类：</p><ul><li>LinkedList：可以用它来实现双向队列。</li><li>PriorityQueue：基于堆结构实现，可以用它来实现优先队列。</li></ul><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p><img data-src="https://img-blog.csdnimg.cn/20190515130904846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01TaG93MDA2,size_16,color_FFFFFF,t_70" alt="Map"></p><p>实现 Map 接口的数据结构存储键值对，不允许重复的 key，例如 HashMap、LinkedHashMap、Hashtable</p><p>常用实现类：</p><ul><li>HashMap：不允许重复的 key，底层数据结构 hash table。</li><li>HashTable：和 HashMap 类似，但它是线程安全的。</li><li>LinkedHashMap：不允许重复的 key，底层数据结构 hash table 与双链表。</li><li>TreeMap：不允许重复的 key，底层数据结构红黑树</li></ul><blockquote><p>参考文章：<span class="exturl" data-url="aHR0cDovL3d3dy5pbXBvcnRuZXcuY29tLzMxMjIzLmh0bWw=">一文快速了解Java集合框架 - ImportNew<i class="fa fa-external-link-alt"></i></span></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190515130837158.gif&quot; alt=&quot;Java集合框架&quot;&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出，Java集合框架主要包括两种类型的容器，一种是&lt;strong&gt;Collection&lt;/strong&gt;，存储对象的集合，另一种是&lt;strong&gt;Map&lt;/strong&gt;，存储键值对映射表。Collection 接口又有3种子接口，List、Set和Queue。&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="java" scheme="https://yingming006.cn/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>使用 VS Code 和 WSL 搭建 C++ 开发环境</title>
    <link href="https://yingming006.cn/run-cpp-use-vscode-in-wsl/"/>
    <id>https://yingming006.cn/run-cpp-use-vscode-in-wsl/</id>
    <published>2021-02-25T03:09:53.000Z</published>
    <updated>2021-02-25T03:12:23.813Z</updated>
    
    <content type="html"><![CDATA[<p>本文整理自 Visual Studio Code 官方说明文档 <span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLXdzbA==">Using C++ and WSL in VS Code<i class="fa fa-external-link-alt"></i></span>，对文档内容做了一些简化。</p><blockquote><p>在本教程中，将配置 Visual Studio Code 以在 Linux 的 Windows 子系统（WSL） Ubuntu 上使用 GCC C++编译器（g++） 和 GDB 调试器。GCC 代表 GNU 编译器集合；GDB 是 GNU 调试器。WSL 是 Windows 中的 Linux 环境，它可以直接在计算机硬件上运行，而不是在虚拟机中运行。</p></blockquote><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li>安装 WSL，<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy93c2wvaW5zdGFsbC13aW4xMA==">官方文档<i class="fa fa-external-link-alt"></i></span></li><li>安装 VS Code，<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vRG93bmxvYWQ=">官方下载地址<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h3 id="WSL-配置"><a href="#WSL-配置" class="headerlink" title="WSL 配置"></a>WSL 配置</h3><p>根据官方文档安装之后进入 WSL，首先安装编译和调试工具</p><blockquote><p>需要更换镜像请参阅 <a href="https://yingming006.cn/change-ubuntu-repository-mirror-sources/">更换Ubuntu镜像源</a></p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install build-essential gdb</span><br></pre></td></tr></table></figure><p>安装之后确认是否安装成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis g++</span><br><span class="line">whereis gdb</span><br></pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/02/25/nSlRcFQD65pvHCf.png" alt="image-20210225100530080"></p><h3 id="通过-WSL-启动-VS-Code"><a href="#通过-WSL-启动-VS-Code" class="headerlink" title="通过 WSL 启动 VS Code"></a>通过 WSL 启动 VS Code</h3><p>新建一个项目文件夹，进入文件夹中，通过 <code>code .</code> 命令启动 WSL</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir helloworld</span><br><span class="line"><span class="built_in">cd</span> helloworld</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><blockquote><p>在这一步通常会自动进行安装 <span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPW1zLXZzY29kZS1yZW1vdGUucmVtb3RlLXdzbA==">Remote - WSL<i class="fa fa-external-link-alt"></i></span>，也可以在 VS Code 手动安装</p></blockquote><h3 id="配置-VS-Code"><a href="#配置-VS-Code" class="headerlink" title="配置 VS Code"></a>配置 VS Code</h3><p>安装  <span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPW1zLXZzY29kZS5jcHB0b29scw==">Microsoft C/C++ extension<i class="fa fa-external-link-alt"></i></span> </p><h3 id="新建-cpp-文件"><a href="#新建-cpp-文件" class="headerlink" title="新建 cpp 文件"></a>新建 cpp 文件</h3><figure class="highlight c++"><figcaption><span>helloworld.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; msg &#123;<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;C++&quot;</span>, <span class="string">&quot;World&quot;</span>, <span class="string">&quot;from&quot;</span>, <span class="string">&quot;VS Code&quot;</span>, <span class="string">&quot;and the C++ extension!&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">string</span>&amp; word : msg)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; word &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译-cpp-文件"><a href="#编译-cpp-文件" class="headerlink" title="编译 cpp 文件"></a>编译 cpp 文件</h3><ol><li><p>在菜单栏中，选择 <code>Terminal</code> &gt; <code>Configure Default Build Task</code>，在弹出下拉栏中选择 <code>g ++ build active file</code></p><p> 之后就会在当前根目录中生成 <code>.vscode/tasks.json</code> 文件</p></li><li><p>使用快捷键 <code>Ctrl + Shift + B</code> 编译文件</p><p> 编译任务开始后，可以在终端界面中看到输出信息</p></li></ol><p><img data-src="https://i.loli.net/2021/02/25/8eUoBvS6LK57FI3.png" alt="image-20210225103331854"></p><ol start="3"><li>在终端执行文件：<code>./helloworld</code></li></ol><h3 id="调试-cpp-文件"><a href="#调试-cpp-文件" class="headerlink" title="调试 cpp 文件"></a>调试 cpp 文件</h3><ol><li><p>在菜单栏中，选择 <code>Run</code> &gt; <code>Add Configuration...</code>，在弹出下拉栏中选择 <code>C++ (GDB/LLDB)</code>，然后选择 <code>g++ build and debug active file</code></p><p> 之后会在当前根目录下生成 <code>.vscode/launch.json</code></p></li><li><p>打开 <code>helloworld.cpp</code>，选择断点，使用快捷键 <code>F5</code> 或者在菜单栏选择 <code>Run</code> &gt; <code>Start Debugging</code></p></li></ol><p>一些注意事项</p><ol><li>VS Code 中自动补全使用的是 <code>Tab</code> 键。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文整理自 Visual Studio Code 官方说明文档 &lt;a href=&quot;https://code.visualstudio.com/docs/cpp/config-wsl&quot;&gt;Using C++ and WSL in VS Code&lt;/a&gt;，对文档内容做了一些简化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在本教程中，将配置 Visual Studio Code 以在 Linux 的 Windows 子系统（WSL） Ubuntu 上使用 GCC C++编译器（g++） 和 GDB 调试器。GCC 代表 GNU 编译器集合；GDB 是 GNU 调试器。WSL 是 Windows 中的 Linux 环境，它可以直接在计算机硬件上运行，而不是在虚拟机中运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;安装 WSL，&lt;a href=&quot;https://docs.microsoft.com/zh-cn/windows/wsl/install-win10&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装 VS Code，&lt;a href=&quot;https://code.visualstudio.com/Download&quot;&gt;官方下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="wsl" scheme="https://yingming006.cn/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>遍历列表(List)时删除元素</title>
    <link href="https://yingming006.cn/remove-elements-from-list-while-iterating-in-java/"/>
    <id>https://yingming006.cn/remove-elements-from-list-while-iterating-in-java/</id>
    <published>2021-01-25T08:07:29.000Z</published>
    <updated>2021-01-26T04:07:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Java 中的 List 集合，使用寻常的 <code>for</code> 循环进行遍历时删除操作时会引起 <code>ConcurrentModificationException</code> 异常，本文主要记录一下避免引起异常的方法。</p><p>首先我们准备一个 <code>List</code>:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; books = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">books.add(<span class="string">&quot;C++&quot;</span>);</span><br><span class="line">books.add(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">books.add(<span class="string">&quot;Python&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="Collection-removeAll"><a href="#Collection-removeAll" class="headerlink" title="Collection#removeAll()"></a>Collection#removeAll()</h2><a id="more"></a><p>利用 <code>Collection#removeAll()</code> 方法，先找到要删除的对象，在完成迭代后进行删除。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; found = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (String book : books) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;Java&quot;</span>.equals(book)) &#123;</span><br><span class="line">        found.add(book);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">books.removeAll(found);</span><br></pre></td></tr></table></figure><p>这种方式理解简单，同时可以对其他的集合进行操作(<code>Collection</code>, <code>Set</code> 等)。</p><p>但是有一个问题，就是我们对 <code>List</code> 遍历了两次: 第一次在 <code>for</code> 循环中找到要删除的对象，第二次是在 <code>books</code> 中找到要删除的对象并将其删除，这是非常影响效率的。</p><h2 id="Iterator"><a href="#Iterator" class="headerlink" title="Iterator"></a>Iterator</h2><p>使用 <code>Iterator</code> 可以在迭代中删除对象。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator&lt;String&gt; iter = books.iterator();</span><br><span class="line"><span class="keyword">while</span>(iter.hasNext())&#123;</span><br><span class="line">    <span class="keyword">if</span>(iter.next().equals(<span class="string">&quot;Java&quot;</span>))&#123;</span><br><span class="line">        iter.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 <code>Iterator</code> 迭代集合时，必须保证集合是可以被迭代并且可以删除元素的，否则会抛出 <code>UnsupportedOperationException</code>。</p><h2 id="Collection-removeIf-JDK-gt-1-8"><a href="#Collection-removeIf-JDK-gt-1-8" class="headerlink" title="Collection#removeIf() (JDK &gt;= 1.8)"></a>Collection#removeIf() (JDK &gt;= 1.8)</h2><p><code>Collection#removeIf()</code> 使用了 <code>JDK 1.8</code> 的 <code>Lambda</code> 特性，对每一个匹配到的元素使用了 <code>Iterator</code> 的 <code>remove()</code> 方法。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">books.removeIf(s -&gt; s.equals(<span class="string">&quot;Java&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="stream-API-JDK-gt-1-8"><a href="#stream-API-JDK-gt-1-8" class="headerlink" title="stream API (JDK &gt;= 1.8)"></a>stream API (JDK &gt;= 1.8)</h2><p>使用 <code>stream</code> 过滤掉需要删除的元素，剩下的元素组成一个新的 <code>List</code>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; filtered = books.stream()</span><br><span class="line">        .filter(b -&gt; b.equals(<span class="string">&quot;Java&quot;</span>))</span><br><span class="line">        .collect(Collectors.toList());</span><br></pre></td></tr></table></figure><p>这样原始 <code>List</code> 的数据结构并未发生改变，创建了一个新的 <code>List</code>，可以方便对原始数据进行操作，显然这种方式用途更加适用需要保存原始数据。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Java 中的 List 集合，使用寻常的 &lt;code&gt;for&lt;/code&gt; 循环进行遍历时删除操作时会引起 &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 异常，本文主要记录一下避免引起异常的方法。&lt;/p&gt;
&lt;p&gt;首先我们准备一个 &lt;code&gt;List&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;String&amp;gt; books = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;books.add(&lt;span class=&quot;string&quot;&gt;&amp;quot;C++&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;books.add(&lt;span class=&quot;string&quot;&gt;&amp;quot;Java&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;books.add(&lt;span class=&quot;string&quot;&gt;&amp;quot;Python&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Collection-removeAll&quot;&gt;&lt;a href=&quot;#Collection-removeAll&quot; class=&quot;headerlink&quot; title=&quot;Collection#removeAll()&quot;&gt;&lt;/a&gt;Collection#removeAll()&lt;/h2&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="java-collection" scheme="https://yingming006.cn/tags/java-collection/"/>
    
  </entry>
  
  <entry>
    <title>备份 Hexo 博客(精简版)</title>
    <link href="https://yingming006.cn/backup-hexo/"/>
    <id>https://yingming006.cn/backup-hexo/</id>
    <published>2020-12-15T11:40:55.000Z</published>
    <updated>2020-12-15T11:40:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>备份是一个好习惯。</p></blockquote><p>目前网上绝大多数的 Hexo 博客备份都是在GitHub新建一个备份仓库，修改 <code>.gitignore</code>，每次更新博客的时候<code>git push</code>一下，这样确实方便很多，但是我在浏览 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC8jQ29uZmlndXJhdGlvbg==">next 官方文档<i class="fa fa-external-link-alt"></i></span>的时候，发现了可以对备份精简的方法，使用代替主题配置文件(<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9jb25maWd1cmF0aW9uLmh0bWw=">Alternate Theme Config<i class="fa fa-external-link-alt"></i></span>)<strong>去掉 themes 文件夹</strong>。</p><blockquote><p> 使用此功能需要 Hexo 版本 &gt;= 5.0.0。</p></blockquote><a id="more"></a><p>首先配置站点<code>_config.yml</code>文件，</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml 以 next 主题为例</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">&quot;next&quot;</span></span><br></pre></td></tr></table></figure><p>然后在站点根目录新建<code>_config.[theme].yml</code>文件，例如 <code>_config.next.yml</code></p><p>然后把 next 主题文件夹下的 <code>_config.yml</code> 文件内容复制到 <code>_config.next.yml</code>就可以了。</p><p>配置完成后目录结构如下 </p><p><img data-src="https://i.loli.net/2020/12/15/vJ2YFQg3kEVelw4.png" alt="Snipaste_2020-12-15_22-06-10.png"></p><p>下次想要恢复的话，直接从GitHub上拉下来，执行<code>npm install</code>即可，非常简单。</p><p>另附 <code>.gitignore</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db.json</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy_git&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;备份是一个好习惯。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前网上绝大多数的 Hexo 博客备份都是在GitHub新建一个备份仓库，修改 &lt;code&gt;.gitignore&lt;/code&gt;，每次更新博客的时候&lt;code&gt;git push&lt;/code&gt;一下，这样确实方便很多，但是我在浏览 &lt;a href=&quot;https://theme-next.js.org/docs/getting-started/#Configuration&quot;&gt;next 官方文档&lt;/a&gt;的时候，发现了可以对备份精简的方法，使用代替主题配置文件(&lt;a href=&quot;https://theme-next.js.org/docs/getting-started/configuration.html&quot;&gt;Alternate Theme Config&lt;/a&gt;)&lt;strong&gt;去掉 themes 文件夹&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 使用此功能需要 Hexo 版本 &amp;gt;= 5.0.0。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="Hexo" scheme="https://yingming006.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>WSL2 访问 Windows 代理</title>
    <link href="https://yingming006.cn/wsl2-access-windows-proxy/"/>
    <id>https://yingming006.cn/wsl2-access-windows-proxy/</id>
    <published>2020-11-30T08:58:27.000Z</published>
    <updated>2021-01-04T12:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取-WSL2-IP-地址"><a href="#获取-WSL2-IP-地址" class="headerlink" title="获取 WSL2 IP 地址"></a>获取 WSL2 IP 地址</h2><p>在 WSL2 中，要访问 Windows 上运行的网络应用（例如在 Windows 上运行的代理软件、SQL 服务器等），需要使用 WSL2 的 IP 地址，而不是 <code>localhost</code>。</p><p>WSL2 的 IP 地址保存在 <code>/etc/resolv.conf</code> 文件中的 <code>nameserver</code>，可以通过一下命令获取：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/resolv.conf|grep nameserver|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><blockquote><p>这里拿 v2ray 举例，默认 sock5 的监听端口为 10808</p></blockquote><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PROXY_PORT=10808</span><br><span class="line"><span class="built_in">export</span> WINDOWS_NAMESERVER=`cat /etc/resolv.conf|grep nameserver|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">export</span> WIN_PROXY=socks5://<span class="variable">$WINDOWS_NAMESERVER</span>:<span class="variable">$PROXY_PORT</span></span><br><span class="line"><span class="built_in">export</span> HTTP_PROXY=<span class="variable">$WIN_PROXY</span></span><br><span class="line"><span class="built_in">export</span> HTTPS_PROXY=<span class="variable">$WIN_PROXY</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Windows-防火墙以及-v2ray-设置"><a href="#Windows-防火墙以及-v2ray-设置" class="headerlink" title="Windows 防火墙以及 v2ray 设置"></a>Windows 防火墙以及 v2ray 设置</h2><p>v2ray 默认情况下是不能通过防火墙的，需要允许 v2ray 通过 Windows 的防火墙，设置如图:</p><p><img data-src="https://i.loli.net/2020/12/31/DStfWsanH1E6wLJ.png" alt="windows 防火墙"></p><blockquote><p>图中允许 v2ray 全部通过防火墙，读者可根据需要自定义开启</p></blockquote><p>v2ray 必须开启<strong>允许来自局域网的连接（connection from private net work）</strong></p><p><img data-src="https://i.loli.net/2020/11/30/vZ1EH96GKOnDQBI.png" alt="v2ray"></p><p>现在可以通过 <code>curl www.google.com</code> 来测试代理是否生效，如果控制台有输出即为设置成功。</p><p>最后附上一个脚本，可以通过 <code>proxy start|stop|status</code> 开启、关闭或者检查代理。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PROXY_PORT=10808</span><br><span class="line">WINDOWS_NAMESERVER=`cat /etc/resolv.conf|grep nameserver|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">ALL_PROXY=socks5://<span class="variable">$WINDOWS_NAMESERVER</span>:<span class="variable">$PROXY_PORT</span></span><br><span class="line">GIT_HTTP_PROXY=`git config --global --get http.proxy`</span><br><span class="line">GIT_HTTPS_PROXY=`git config --global --get https.proxy`</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">            <span class="built_in">export</span> HTTP_PROXY=<span class="variable">$ALL_PROXY</span></span><br><span class="line">            <span class="built_in">export</span> HTTPS_PROXY=<span class="variable">$ALL_PROXY</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;`git config --global --get http.proxy`&quot;</span> != <span class="variable">$ALL_PROXY</span> ]; <span class="keyword">then</span></span><br><span class="line">                git config --global http.proxy <span class="variable">$ALL_PROXY</span></span><br><span class="line">                git config --global https.proxy <span class="variable">$ALL_PROXY</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        stop)</span><br><span class="line">            <span class="built_in">unset</span> HTTP_PROXY</span><br><span class="line">            <span class="built_in">unset</span> HTTPS_PROXY</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;`git config --global --get http.proxy`&quot;</span> = <span class="variable">$ALL_PROXY</span> ]; <span class="keyword">then</span></span><br><span class="line">                git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">                git config --global --<span class="built_in">unset</span> https.proxy</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        status)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;HTTP_PROXY:&quot;</span> <span class="variable">$HTTP_PROXY</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;HTTPS_PROXY:&quot;</span> <span class="variable">$HTTPS_PROXY</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;GIT_HTTP_PROXY: `git config --global --get http.proxy`&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;GIT_HTTPS_PROXY: `git config --global --get https.proxy`&quot;</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;usage: source <span class="variable">$0</span> start|stop|status&quot;</span></span><br><span class="line">            ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>使得命令生效的话还需要在 <code>~/.bashrc</code> 文件末尾新增一条命令(<code>~/.set-wsl2-proxy.sh</code> 表示脚本路径):</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> proxy=<span class="string">&quot;source ~/set-wsl2-proxy.sh&quot;</span></span><br></pre></td></tr></table></figure><p>参考:</p><ol><li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy93c2wvY29tcGFyZS12ZXJzaW9ucyNhY2Nlc3Npbmctd2luZG93cy1uZXR3b3JraW5nLWFwcHMtZnJvbS1saW51eC1ob3N0LWlw">https://docs.microsoft.com/zh-cn/windows/wsl/compare-versions#accessing-windows-networking-apps-from-linux-host-ip<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly96aW5nbGl4Lnh5ei8yMDIwLzA0LzE4L3dzbDItcHJveHkv">https://zinglix.xyz/2020/04/18/wsl2-proxy/<i class="fa fa-external-link-alt"></i></span></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;获取-WSL2-IP-地址&quot;&gt;&lt;a href=&quot;#获取-WSL2-IP-地址&quot; class=&quot;headerlink&quot; title=&quot;获取 WSL2 IP 地址&quot;&gt;&lt;/a&gt;获取 WSL2 IP 地址&lt;/h2&gt;&lt;p&gt;在 WSL2 中，要访问 Windows 上运行的网络应用（例如在 Windows 上运行的代理软件、SQL 服务器等），需要使用 WSL2 的 IP 地址，而不是 &lt;code&gt;localhost&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;WSL2 的 IP 地址保存在 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 文件中的 &lt;code&gt;nameserver&lt;/code&gt;，可以通过一下命令获取：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /etc/resolv.conf|grep nameserver|awk &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;这里拿 v2ray 举例，默认 sock5 的监听端口为 10808&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PROXY_PORT=10808&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; WINDOWS_NAMESERVER=`cat /etc/resolv.conf|grep nameserver|awk &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#123;print $2&amp;#125;&amp;#x27;&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; WIN_PROXY=socks5://&lt;span class=&quot;variable&quot;&gt;$WINDOWS_NAMESERVER&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;$PROXY_PORT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; HTTP_PROXY=&lt;span class=&quot;variable&quot;&gt;$WIN_PROXY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; HTTPS_PROXY=&lt;span class=&quot;variable&quot;&gt;$WIN_PROXY&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="wsl" scheme="https://yingming006.cn/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>排序算法-Java实现</title>
    <link href="https://yingming006.cn/sort-algorithm-in-java/"/>
    <id>https://yingming006.cn/sort-algorithm-in-java/</id>
    <published>2020-11-09T05:37:17.000Z</published>
    <updated>2020-11-09T05:37:17.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = array.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">boolean</span> swapped = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j + <span class="number">1</span> &lt;= i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j] &gt; array[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                swap(array, j, j + <span class="number">1</span>);</span><br><span class="line">                swapped = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!swapped) &#123;</span><br><span class="line">            <span class="comment">// 本轮没有替换, 提前结束</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = array.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 初始化最小值索引</span></span><br><span class="line">        <span class="keyword">int</span> min = i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(array[min] &lt; array[j]) &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 最小值索引已更改, 交换</span></span><br><span class="line">        <span class="keyword">if</span>(min != i) &#123;</span><br><span class="line">            swap(array, i, min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> k = array[i];</span><br><span class="line">        <span class="keyword">while</span> (i - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; array[i - <span class="number">1</span>] &gt; k) &#123;</span><br><span class="line">            array[i] = array[i - <span class="number">1</span>];</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        array[i] = k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    doSort(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSort</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = left - <span class="number">1</span>, j = right + <span class="number">1</span>, mid = array[left + right &gt;&gt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++; <span class="keyword">while</span> (array[i] &lt; mid);</span><br><span class="line">        <span class="keyword">do</span> j --; <span class="keyword">while</span> (array[j] &gt; mid);</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j) swap(array, i, j);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    doSort(array, left, j);</span><br><span class="line">    doSort(array, j + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        doSort(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSort</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mid = left + right &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        doSort(array, left, mid);</span><br><span class="line">        doSort(array, mid + <span class="number">1</span>, right);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = left, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[right - left + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[i] &lt; array[j]) tmp[k++] = array[i++];</span><br><span class="line">            <span class="keyword">else</span> tmp[k++] = array[j++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) tmp[k++] = array[i++];</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= right) tmp[k++] = array[j++];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = left, j = <span class="number">0</span>; i &lt;= right; i++, j++) array[i] = tmp[j];</span><br><span class="line">        <span class="comment">// System.arraycopy(tmp, 0, array, left, right - left + 1);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> size = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= size; i++) &#123;</span><br><span class="line">        push_up(arr, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        swap(arr, <span class="number">1</span>, size);</span><br><span class="line">        size--;</span><br><span class="line">        push_down(arr, size, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">push_down</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> size, <span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = u, left = u * <span class="number">2</span>, right = u * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (left &lt;= size &amp;&amp; arr[left] &gt; arr[t]) t = left;</span><br><span class="line">    <span class="keyword">if</span> (right &lt;= size &amp;&amp; arr[right] &gt; arr[t]) t = right;</span><br><span class="line">    <span class="keyword">if</span> (u != t) &#123;</span><br><span class="line">        swap(arr, u, t);</span><br><span class="line">        push_down(arr, size, t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">push_up</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (u / <span class="number">2</span> &gt; <span class="number">0</span> &amp;&amp; arr[u / <span class="number">2</span>] &lt; arr[u]) &#123;</span><br><span class="line">        swap(arr, u / <span class="number">2</span>, u);</span><br><span class="line">        u /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码地址：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lpbmdtaW5nMDA2L0FsZ29yaXRobXNJbkphdmEvdHJlZS9tYWluL3NvcnQ=">AlgorithmsInJava/sort<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] array)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = array.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; swapped = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;= i; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (array[j] &amp;gt; array[j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                swap(array, j, j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                swapped = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!swapped) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 本轮没有替换, 提前结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;选择排序&quot;&gt;&lt;a href=&quot;#选择排序&quot; class=&quot;headerlink&quot; title=&quot;选择排序&quot;&gt;&lt;/a&gt;选择排序&lt;/h2&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="algorithm" scheme="https://yingming006.cn/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>WIN10系统重装与常用软件安装</title>
    <link href="https://yingming006.cn/win10-system-reinstallation-and-common-software-install/"/>
    <id>https://yingming006.cn/win10-system-reinstallation-and-common-software-install/</id>
    <published>2020-11-03T07:36:58.000Z</published>
    <updated>2020-11-03T07:36:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统重装"><a href="#系统重装" class="headerlink" title="系统重装"></a>系统重装</h2><h3 id="win10-家庭版"><a href="#win10-家庭版" class="headerlink" title="win10 家庭版"></a>win10 家庭版</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9zb2Z0d2FyZS1kb3dubG9hZC93aW5kb3dzMTA=">下载windows10<i class="fa fa-external-link-alt"></i></span> 官网，点击立即下载，通过该工具制作U盘启动盘。（最简单、最方便）</p><a id="more"></a><h3 id="win10-专业版"><a href="#win10-专业版" class="headerlink" title="win10 专业版"></a>win10 专业版</h3><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>需要 win10 专业版的镜像，下载途径：</p><ul><li>正版软件管理和服务平台（大学正版软件平台，推荐）</li><li><span class="exturl" data-url="aHR0cHM6Ly9uZXh0Lml0ZWxseW91LmNuLw==">ITELLYOU<i class="fa fa-external-link-alt"></i></span> （提供原版软件）</li><li><span class="exturl" data-url="aHR0cHM6Ly93aW4xMC5pdGhvbWUuY29tL3dpbjEweGlhemFp">IT之家-WIN10系统下载<i class="fa fa-external-link-alt"></i></span></li></ul><p>U盘启动盘制作软件：<span class="exturl" data-url="aHR0cHM6Ly9ydWZ1cy5pZS8=">Rufus<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9jbi51bHRyYWlzby5uZXQv">UltrISO<i class="fa fa-external-link-alt"></i></span></p><h4 id="U盘启动盘制作"><a href="#U盘启动盘制作" class="headerlink" title="U盘启动盘制作"></a>U盘启动盘制作</h4><p>Rufus 开箱即用 操作简单</p><p>UltrISO 使用步骤：</p><ul><li>“文件” - “打开”，打开ISO镜像文件</li><li>“启动” - “写入硬盘镜像”</li><li>写入方式：“USB-HDD+”，“写入”，等待写入完成</li></ul><p><del>### WIN10系统激活</del> </p><p><del><a href="https://www.dogedoge.com/rd/i%2BUckQiSGIwLH2Uth2XLds6ZA1upwanaE%2FYVyxx6GH0%3D">沧水的<em>KMS激活</em>服务</a></del></p><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><ul><li><p>检查更新</p></li><li><p>启动或关闭windows功能——“适用于Linux的Windows子系统”</p></li></ul><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><h3 id="UWP应用"><a href="#UWP应用" class="headerlink" title="UWP应用"></a>UWP应用</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9wL21pY3Jvc29mdC10by1kby1saXN0cy10YXNrcy1yZW1pbmRlcnMvOW5ibGdnaDVyNTU4">TODO<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9wL3VidW50dS85bmJsZ2doNG1zdjY=">Ubuntut<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9wL3dpbmRvd3MtdGVybWluYWwvOW4wZHgyMGhrNzAx">Windows Terminal<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9wL3NuaXBhc3RlLzlwMXd4cGtiNjhreA==">Snipaste<i class="fa fa-external-link-alt"></i></span></li><li>电视（更换香港地区下载）</li><li>爱壁纸</li></ul><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuNy16aXAub3JnLw==">7-zip<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cudm9pZHRvb2xzLmNvbS96aC1jbi8=">Everything<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZm94bWFpbC5jb20v">Foxmail<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFuZGlzb2Z0LmNvbS9ob25leXZpZXcv">Honeyview<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL2xpc3RlbjEuZ2l0aHViLmlvL2xpc3RlbjEv">Listen1<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5wb3RwbGF5ZXJjbi5jb20v">PotPlayer<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90eXBvcmEuaW8v">Typora<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly91LnRvb2xzLw==">uTools<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYXJjaD9xPXNoYWRvd3NvY2tzLXJzcw==">SSR<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9vdHAubGFuZGlhbi52aXAvemgtY24v">Office Tool Plus<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pob25neWFuZzIxOS9UcmFmZmljTW9uaXRvcg==">TrafficMonitor<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9nZWVrdW5pbnN0YWxsZXIuY29tLw==">geekUninstaller<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9pbS5xcS5jb20v">QQ<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9wYy53ZWl4aW4ucXEuY29tLw==">微信<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3gueHVubGVpLmNvbS8=">迅雷<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueWlueGlhbmcuY29tLw==">印象笔记<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5mZmhvbWUuY29tL3RhZy8lRTglOEYlQjIlRTglOEYlQjIlRTYlOUIlQjQlRTUlOTAlOEQlRTUlQUUlOUQlRTglQjQlOUQ=">菲菲更名宝贝<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">Git<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaGVpZGlzcWwuY29tLw==">HeidiSQL<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuamV0YnJhaW5zLmNvbS9pZGVhL2Rvd25sb2FkLyNzZWN0aW9uPXdpbmRvd3M=">IDEA<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UtZG93bmxvYWRzLmh0bWw=">JDK<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v">VSCode<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cDovL25vZGVqcy5jbi8=">Node.js<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93aW5zY3AubmV0L2VuZy9kb2NzL2xhbmc6Y2hz">WinSCP<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubmV0c2FyYW5nLmNvbS96aC94c2hlbGwv">XShell<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;系统重装&quot;&gt;&lt;a href=&quot;#系统重装&quot; class=&quot;headerlink&quot; title=&quot;系统重装&quot;&gt;&lt;/a&gt;系统重装&lt;/h2&gt;&lt;h3 id=&quot;win10-家庭版&quot;&gt;&lt;a href=&quot;#win10-家庭版&quot; class=&quot;headerlink&quot; title=&quot;win10 家庭版&quot;&gt;&lt;/a&gt;win10 家庭版&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/zh-cn/software-download/windows10&quot;&gt;下载windows10&lt;/a&gt; 官网，点击立即下载，通过该工具制作U盘启动盘。（最简单、最方便）&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>IDEA 无法使用 HTTP Client 的解决过程</title>
    <link href="https://yingming006.cn/IDEA-cannot-use-HTTP-Client-solution-process/"/>
    <id>https://yingming006.cn/IDEA-cannot-use-HTTP-Client-solution-process/</id>
    <published>2020-11-03T05:00:03.000Z</published>
    <updated>2021-03-15T04:00:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img data-src="https://img-blog.csdnimg.cn/img_convert/cb3a4fc6f56a7257109a386f759c37b4.png" alt="image-20201103111841176"></p><p>点击 <code>Run All Requsets in File</code> =&gt; <code>Run with no environment</code> 时，控制台报错如图。</p><a id="more"></a><h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><p>首先在浏览器中测试 GET 请求，请求正常响应，如图</p><p><img data-src="https://img-blog.csdnimg.cn/img_convert/a2809879cb44173da7951891ce90dc9f.png" alt="image-20201103112218103"></p><p>然后又在 Postman 中测试也没有问题</p><p>这时想到，应该是 IDEA 的问题了，首先想到的就是插件出了问题，但是 IDEA HTTP Client 没有用到插件，所以说应该不是插件的问题。</p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>最终经过一番查找，是 IDEA 的代理出了问题，准确说是 IDEA 的代理没有忽略本地地址，导致 IDEA 访问不到本地，所以在 IDEA 代理中设置一下就解决了，配置如图：</p><p><img data-src="https://img-blog.csdnimg.cn/img_convert/e1e52a8264971abb5d04d2373c547117.png" alt="image-20201103112903111"></p><p>或者是直接关闭代理也可以解决。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>正确的使用搜索引擎可以提高问题排查效率。</p><p>尽可能准确的使用关键字查询。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/cb3a4fc6f56a7257109a386f759c37b4.png&quot; alt=&quot;image-20201103111841176&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;Run All Requsets in File&lt;/code&gt; =&amp;gt; &lt;code&gt;Run with no environment&lt;/code&gt; 时，控制台报错如图。&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="idea" scheme="https://yingming006.cn/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu的软件源配置和管理工具</title>
    <link href="https://yingming006.cn/software-mirror-in-ubuntu/"/>
    <id>https://yingming006.cn/software-mirror-in-ubuntu/</id>
    <published>2020-11-02T08:29:51.000Z</published>
    <updated>2020-11-02T08:29:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ul><li><p>全局修改</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></li><li><p>第三方软件切换 node.js 镜像源 <span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbnJt">nrm<i class="fa fa-external-link-alt"></i></span></p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install -g nrm</span><br><span class="line"><span class="comment"># 列出可用的镜像源</span></span><br><span class="line">nrm ls</span><br><span class="line"><span class="comment"># 选择 taobao 镜像源</span></span><br><span class="line">nrm use taobao</span><br><span class="line"><span class="comment"># 测试镜像源访问速度</span></span><br><span class="line">nrm <span class="built_in">test</span> taobao</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h2 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h2><ul><li><p>全局修改</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn config <span class="built_in">set</span> registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure></li><li><p>第三方软件切换 yarn 镜像源 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhbmEvbnJt">yrm<i class="fa fa-external-link-alt"></i></span></p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install -g yrm</span><br><span class="line"><span class="comment"># 列出可用的镜像源</span></span><br><span class="line">yrm ls</span><br><span class="line"><span class="comment"># 选择 taobao 镜像源</span></span><br><span class="line">yrm use taobao</span><br><span class="line"><span class="comment"># 测试镜像源访问速度</span></span><br><span class="line">yrm <span class="built_in">test</span> taobao</span><br></pre></td></tr></table></figure></li></ul><h2 id="pip3"><a href="#pip3" class="headerlink" title="pip3"></a>pip3</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly9sZWFybmt1LmNvbS9hcnRpY2xlcy8xNTk3Ni95YXJuLWFjY2VsZXJhdGUtYW5kLW1vZGlmeS1taXJyb3Itc291cmNlLWluLWNoaW5h">yarn 国内加速，修改镜像源<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;全局修改&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; registry https://registry.npm.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三方软件切换 node.js 镜像源 &lt;a href=&quot;https://www.npmjs.com/package/nrm&quot;&gt;nrm&lt;/a&gt;&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install -g nrm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 列出可用的镜像源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nrm ls&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 选择 taobao 镜像源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nrm use taobao&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 测试镜像源访问速度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nrm &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; taobao&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>在Ubuntu系统中安装常用软件</title>
    <link href="https://yingming006.cn/install-software-in-ubuntu/"/>
    <id>https://yingming006.cn/install-software-in-ubuntu/</id>
    <published>2020-09-07T07:06:19.000Z</published>
    <updated>2020-12-29T04:06:19.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在进行软件安装命令<code>apt</code>前，尽可能的进行一次更新操作：</p><p><code>sudo apt update</code></p></blockquote><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><blockquote><p>2020年9月7日更新</p></blockquote><ul><li><p>安装（默认 JDK-11）</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install default-jdk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果只需要Java运行环境，那么可以只安装JRE</span></span><br><span class="line">sudo apt install default-jre</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>确认版本</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 输出</span><br><span class="line">openjdk 11.0.8 2020-07-14</span><br><span class="line">OpenJDK Runtime Environment (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1, mixed mode, sharing)</span><br></pre></td></tr></table></figure></li><li><p>安装 JDK-8</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-8-jdk</span><br></pre></td></tr></table></figure></li><li><p>多版本切换</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 输出</span><br><span class="line">There are 2 choices for the alternative java (providing &#x2F;usr&#x2F;bin&#x2F;java).</span><br><span class="line">  Selection    Path                                            Priority   Status</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">* 0            &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11-openjdk-amd64&#x2F;bin&#x2F;java      1111      auto mode</span><br><span class="line">  1            &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11-openjdk-amd64&#x2F;bin&#x2F;java      1111      manual mode</span><br><span class="line">  2            &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-8-openjdk-amd64&#x2F;jre&#x2F;bin&#x2F;java   1081      manual mode</span><br><span class="line">Press &lt;enter&gt; to keep the current choice[*], or type selection number:</span><br></pre></td></tr></table></figure><p>  根据需要输入对应版本前的序号即可。</p></li><li><p>配置 JAVA_HOME 变量</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><ul><li><p>JDK-11 的路径为：<code>/usr/lib/jvm/java-11-openjdk-amd64/bin/java</code></p></li><li><p>JDK-8 的路径为：<code>/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java</code></p><p>在 <code>/etc/environment</code> 文件末尾添加：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME&#x3D;&quot;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11-openjdk-amd64&quot;</span><br></pre></td></tr></table></figure><p>更新一下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/environment</span><br></pre></td></tr></table></figure><p>验证一下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 输出</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11-openjdk-amd64</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Node-js-和-npm"><a href="#Node-js-和-npm" class="headerlink" title="Node.js 和 npm"></a>Node.js 和 npm</h3><ul><li><p>通过 <code>apt</code> 安装</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nodejs npm</span><br></pre></td></tr></table></figure></li><li><p>更新</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install npm@latest -g</span><br></pre></td></tr></table></figure></li></ul><blockquote><p> 关于 npm 的换源请看下一篇文章：</p></blockquote><h3 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h3><ul><li><p>跳过 node 安装</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install --no-install-recommends yarn</span><br></pre></td></tr></table></figure></li></ul><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><ul><li><p>安装</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure></li><li><p>查看 Nginx 状态：</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure></li><li><p>停止 Nginx：</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br></pre></td></tr></table></figure></li><li><p>重启 Nginx：</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure></li></ul><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><ul><li><p>安装程序所需依赖，导入GPG密钥，将Docker APT存储库添加到系统中</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>安装</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><h3 id="Docker-Composer"><a href="#Docker-Composer" class="headerlink" title="Docker Composer"></a>Docker Composer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h3 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a>tldr</h3><p>命令帮助工具</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g tldr</span><br></pre></td></tr></table></figure><h3 id="neofetch"><a href="#neofetch" class="headerlink" title="neofetch"></a>neofetch</h3><p>命令行系统信息工具</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install neofetch</span><br></pre></td></tr></table></figure><h3 id="zsh-amp-oh-my-zsh"><a href="#zsh-amp-oh-my-zsh" class="headerlink" title="zsh &amp; oh-my-zsh"></a>zsh &amp; oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 zsh</span></span><br><span class="line">sudo apt install zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更换默认 SHELL</span></span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>由于网络原因下载慢的，可以使用下面的备份地址</p><p><code>https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="zsh-插件推荐"><a href="#zsh-插件推荐" class="headerlink" title="zsh 插件推荐"></a>zsh 插件推荐</h4><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtYXV0b3N1Z2dlc3Rpb25z">zsh-autosuggestions<i class="fa fa-external-link-alt"></i></span></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3pzaC11c2Vycy96c2gtc3ludGF4LWhpZ2hsaWdodGluZw==">zsh-syntax-highlighting<i class="fa fa-external-link-alt"></i></span></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p><code>.bashrc</code> 文件修改如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins&#x3D;(zsh-autosuggestions zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在进行软件安装命令&lt;code&gt;apt&lt;/code&gt;前，尽可能的进行一次更新操作：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;2020年9月7日更新&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装（默认 JDK-11）&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install default-jdk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 如果只需要Java运行环境，那么可以只安装JRE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install default-jre&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>更换Ubuntu镜像源</title>
    <link href="https://yingming006.cn/change-ubuntu-repository-mirror-sources/"/>
    <id>https://yingming006.cn/change-ubuntu-repository-mirror-sources/</id>
    <published>2020-09-06T13:12:08.000Z</published>
    <updated>2020-09-17T13:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>备份 <code>/etc/apt/sources.list</code> 文件</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak </span><br></pre></td></tr></table></figure></li><li><p>替换 <code>/etc/apt/sources.list</code> 文件</p><p>  根据下方列出的配置内容，进行全文替换即可</p></li><li><p>更新软件源</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><h3 id="阿里源"><a href="#阿里源" class="headerlink" title="阿里源"></a>阿里源</h3><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9taXJyb3IvdWJ1bnR1">官方文档<i class="fa fa-external-link-alt"></i></span></p><ul><li>ubuntu 20.04(focal) </li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h3 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h3><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvdWJ1bnR1Lw==">官方文档<i class="fa fa-external-link-alt"></i></span></p><ul><li>ubuntu 20.04(focal) </li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; focal-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><blockquote><p>阿里和清华的镜像源应该是使用最多的了，其他的例如腾讯源、网易源、华为源可自行解决，在此不做记录。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;备份 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 文件&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;替换 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 文件&lt;/p&gt;
&lt;p&gt;  根据下方列出的配置内容，进行全文替换即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新软件源&lt;/p&gt;
  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>基于 Hexo + GitHub Pages 搭建个人博客</title>
    <link href="https://yingming006.cn/build-a-personal-blog-based-on-hexo-and-github-pages/"/>
    <id>https://yingming006.cn/build-a-personal-blog-based-on-hexo-and-github-pages/</id>
    <published>2020-03-31T16:31:13.000Z</published>
    <updated>2021-01-20T16:20:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="必读文档"><a href="#必读文档" class="headerlink" title="必读文档"></a>必读文档</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuLw==">Hexo 官方文档<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">NexT 官方文档<i class="fa fa-external-link-alt"></i></span></li></ul><a id="more"></a><h2 id="本地环境准备"><a href="#本地环境准备" class="headerlink" title="本地环境准备"></a>本地环境准备</h2><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 12.x 代表版本号</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -</span><br><span class="line"></span><br><span class="line">sudo apt install nodejs</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br></pre></td></tr></table></figure><p>搭建完成后，目录结构如下:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.landscape.yml   # landscape 主题配置文件， Hexo 的默认主题。</span><br><span class="line">├── _config.yml             # Hexo 站点配置文件。</span><br><span class="line">├── db.json</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json            # 第三方依赖</span><br><span class="line">├── scaffolds               # 模版 文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件。</span><br><span class="line">├── source                  # 存放用户资源的地方</span><br><span class="line">└── themes                  # 主题文件夹，存放第三方主题的地方。</span><br></pre></td></tr></table></figure><blockquote><p>在 Hexo 5.0.0 版本后，可以使用独立的 _config.[theme].yml 来代替 themes 下的主题，官方称为<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbi5odG1sIyVFNCVCRCVCRiVFNyU5NCVBOCVFNCVCQiVBMyVFNiU5QiVCRiVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NiU4NyVFNCVCQiVCNg==">代替配置文件<i class="fa fa-external-link-alt"></i></span>。</p></blockquote><p>现在可以使用 <code>hexo s</code> 命令启动本地 Hexo 服务器，默认地址 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLw==">http://localhost:4000<i class="fa fa-external-link-alt"></i></span> 。</p><h2 id="使用-NexT-主题"><a href="#使用-NexT-主题" class="headerlink" title="使用 NexT 主题"></a>使用 NexT 主题</h2><h3 id="安装-NexT-主题"><a href="#安装-NexT-主题" class="headerlink" title="安装 NexT 主题"></a>安装 NexT 主题</h3><ul><li>使用 <code>npm</code> (推荐)</li></ul><div class="tabs" id="use-npm"><ul class="nav-tabs"><li class="tab active"><a href="#use-npm-1">使用 Latest 版本</a></li><li class="tab"><a href="#use-npm-2">指定版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="use-npm-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-theme-next@latest</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="use-npm-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-theme-next@8.0.0</span><br></pre></td></tr></table></figure></div></div></div><ul><li>使用 <code>git</code></li></ul><div class="tabs" id="use-git"><ul class="nav-tabs"><li class="tab active"><a href="#use-git-1">使用 Latest 分支</a></li><li class="tab"><a href="#use-git-2">指定版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="use-git-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>或者从 GitLab 下载</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitlab.com/hexo-theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="use-git-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --branch v8.0.0 https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>或者从 GitLab 下载</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --branch v8.0.0 https://gitlab.com/hexo-theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></div></div></div><h3 id="使用-NexT-主题-1"><a href="#使用-NexT-主题-1" class="headerlink" title="使用 NexT 主题"></a>使用 NexT 主题</h3><p>在站点配置文件 <code>_config.yml</code> 中，设置如下：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>现在使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 命令重新启动本地 Hexo 服务器，打开默认地址 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAw77yM5bCx5Lya55yL5Yiw">http://localhost:4000，就会看到<i class="fa fa-external-link-alt"></i></span> NexT 主题了。</p><h3 id="代替配置文件-Alternate-Config-配置-Hexo-主题"><a href="#代替配置文件-Alternate-Config-配置-Hexo-主题" class="headerlink" title="代替配置文件(Alternate Config) 配置 Hexo 主题"></a>代替配置文件(Alternate Config) 配置 Hexo 主题</h3><p>使用<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbi5odG1sIyVFNCVCRCVCRiVFNyU5NCVBOCVFNCVCQiVBMyVFNiU5QiVCRiVFOSU4NSU4RCVFNyVCRCVBRSVFNiU5NiU4NyVFNCVCQiVCNg==">代替配置文件(Alternate Config)<i class="fa fa-external-link-alt"></i></span> 配置 Hexo 主题。这也是 <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL2dldHRpbmctc3RhcnRlZC9jb25maWd1cmF0aW9uLmh0bWw=">Next 文档<i class="fa fa-external-link-alt"></i></span>推荐的配置方式。</p><blockquote><p>注意 Hexo 版本应该 &gt;= 5.0.0 。<br>  需要在使用 <a href="/build-a-personal-blog-based-on-hexo-and-github-pages/#%E5%AE%89%E8%A3%85-NexT-%E4%B8%BB%E9%A2%98">npm 安装 NexT</a> 。</p></blockquote><h4 id="新建-config-theme-yml-文件"><a href="#新建-config-theme-yml-文件" class="headerlink" title="新建 _config.[theme].yml 文件"></a>新建 _config.[theme].yml 文件</h4><p>首先在站点根目录下新建 <code>_config.next.yml</code> 文件， <code>next</code> 表示使用的 Hexo 主题是 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0">next-themes<i class="fa fa-external-link-alt"></i></span>。</p><h4 id="拷贝-NexT-配置"><a href="#拷贝-NexT-配置" class="headerlink" title="拷贝 NexT 配置"></a>拷贝 NexT 配置</h4><p>在<strong>站点根目录</strong>下，使用以下命令拷贝 NexT 配置（或者去 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL19jb25maWcueW1s">GitHub<i class="fa fa-external-link-alt"></i></span> 上拷贝也可以）。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure><p>同样的，在使用 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 命令重新启动本地 Hexo 服务器，打开默认地址 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAw77yM5Y2z5Y+v55yL5Yiw">http://localhost:4000，即可看到<i class="fa fa-external-link-alt"></i></span> NexT 主题。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="部署到-GitHub-Pages"><a href="#部署到-GitHub-Pages" class="headerlink" title="部署到 GitHub Pages"></a>部署到 GitHub Pages</h3><p>准备:</p><ul><li>一个和 GitHub 用户名同名的 yingming006.github.io 的公开仓库</li><li><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vY24vZnJlZS1wcm8tdGVhbUBsYXRlc3QvZ2l0aHViL2F1dGhlbnRpY2F0aW5nLXRvLWdpdGh1Yi9hZGRpbmctYS1uZXctc3NoLWtleS10by15b3VyLWdpdGh1Yi1hY2NvdW50">新增 SSH 密钥到 GitHub 帐户<i class="fa fa-external-link-alt"></i></span></li></ul><h4 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 <code>hexo-deployer-git</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 <code>_config.yml</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yingming006&#x2F;yingming006.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><p>运行命令 <code>hexo d</code> 即可发布到 GitHub Pages 上，稍等一会儿即可通过 username.github.io 访问。</p><h3 id="部署到个人服务器"><a href="#部署到个人服务器" class="headerlink" title="部署到个人服务器"></a>部署到个人服务器</h3><h4 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h4><p>因为 <code>Hexo</code> 是静态博客，所以只需要 <code>Nginx</code> 即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>安装完成后，打开网页看到的会是<code>Nginx</code>的欢迎页面。</p><blockquote><p>如果没有显示，尝试配置安全组，开放 80 端口，或者运行命令 <code>sudo systemctl restart nginx</code> 重启 Nginx 服务</p></blockquote><p>Nginx 默认站点指向了 <code>/var/www/html</code> 目录下的 <code>index.nginx-debian.html</code>，我们的目标是让 Nginx 指向博客站点目录下的 <code>index.html</code>。</p><ul><li>首先在 <code>/var/www/html</code> 文件夹下创建存放博客源文件的目录：<code>/var/www/yingming006.cn</code>;</li><li>在 <code>/etc/nginx/sites-available</code> 文件夹下创建 <code>Nginx</code> 的配置文件：<code>yingming006.cn</code></li><li>创建软连接 <code>/etc/nginx/sites-enabled/yingming006.cn</code></li><li>删除<code>/etc/nginx/sites-enabled/default</code> 文件并重新启动 <code>Nginx</code> 即可。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /var/www/yingming006.cn</span><br><span class="line">sudo touch /etc/nginx/sites-available/yingming006.cn</span><br><span class="line">sudo ln -s /etc/nginx/sites-available/yingming006.cn /etc/nginx/sites-enabled/yingming006.cn</span><br><span class="line">sudo rm /etc/nginx/sites-enabled/default</span><br><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><p><code>/etc/nginx/sites-available/yingming006.cn</code> 配置文件参考<code>default</code>内容修改如下：</p><figure class="highlight txt"><figcaption><span>/etc/nginx/sites-available/yingming006.cn</span></figcaption><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name yingming006.cn;</span><br><span class="line"></span><br><span class="line">    root /var/www/yingming006.cn;</span><br><span class="line"></span><br><span class="line">    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h4><p>网站的源文件通过<code>Git</code>进行版本管理，每一次更新源文件之后，可以通过<code>Git</code>的<code>hook</code>操作自动更新到<code>/var/www/yingming006.cn</code>的目录下。因此，我们需要在服务器上面搭建一个自己的<code>Git</code>服务器，具体的操作如下：</p><ul><li><p>创建<code>Git</code>用户，并且授予其sudo权限</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo adduser git</span><br><span class="line">sudo usermod -aG sudo git</span><br></pre></td></tr></table></figure></li><li><p>以 <code>Git</code> 用户重新登录服务器，在 <code>/home/git</code> 文件夹下创建 <code>repositories</code> 目录，专门用作<code>Git</code>服务器放置repo的地方。</p>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git@computer_name:~$ git init --bare repositories&#x2F;hexo-blog.git</span><br><span class="line">Initialized empty Git repository in &#x2F;home&#x2F;git&#x2F;repositories&#x2F;hexo-blog.git&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>之后就可以在本地把刚刚创建好的 <code>hexo-blog</code> 克隆下来，为了避免每次验证需要输入密码，可以使用命令 :</p>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id git@yingming006.cn</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git@yingming006.cn:/home/git/repositories/hexo-blog.git</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>Git</code> 的 <code>hook</code>，创建文件：<code>touch /home/git/repositories/hexo-blog.git/hooks/post-receive</code> ，添加以下内容：</p>  <figure class="highlight txt"><figcaption><span>post-receive</span></figcaption><table><tr><td class="code"><pre><span class="line">git --work-tree=/var/www/houmin.cc --git-dir=/home/git/repositories/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>  赋予执行权限：<code>chmod +x /home/git/repositories/hexo-blog.git/hooks/post-receive</code></p><p>  关联<code>git</code>用户：<code>sudo chown -R git:git /var/www/yingming006.cn</code></p></li></ul><p>经过上述操作，当 <code>hexo-blog</code> 更新时，就会自动复制到 <code>/var/www/yingming006.cn</code> 文件夹下。</p><p>现在，重新访问下 <code>yingming006.cn</code>，如果没有出错的话，就可以看到博客了。</p><h2 id="NexT-主题配置"><a href="#NexT-主题配置" class="headerlink" title="NexT 主题配置"></a>NexT 主题配置</h2><h3 id="侧边栏-Sidebar"><a href="#侧边栏-Sidebar" class="headerlink" title="侧边栏 Sidebar"></a>侧边栏 Sidebar</h3><div class="tabs" id="position"><ul class="nav-tabs"><li class="tab active"><a href="#position-1">position</a></li><li class="tab"><a href="#position-2">width</a></li><li class="tab"><a href="#position-3">display</a></li></ul><div class="tab-content"><div class="tab-pane active" id="position-1"><p>设定侧边栏的位置，左侧或者右侧。</p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">  <span class="comment">#position: right</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="position-2"><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="comment"># width: 300</span></span><br></pre></td></tr></table></figure><div class="note info"><p>各模式默认宽度如下：</p><ul><li>Muse | Mist : 320</li><li>Pisces | Gemini : 240</li></ul></div></div><div class="tab-pane" id="position-3"><p>显示侧边栏的条件:</p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line">  <span class="attr">display:</span> <span class="string">post</span>     <span class="comment"># 仅在具有索引的文章中显示侧边栏</span></span><br><span class="line">  <span class="comment">#display: always  # 所有页面都显示侧边栏</span></span><br><span class="line">  <span class="comment">#display: hide    # 默认隐藏侧边栏，但是可以点击开启</span></span><br><span class="line">  <span class="comment">#display: remove  # 删除侧边栏</span></span><br></pre></td></tr></table></figure></div></div></div><h4 id="头像-Avatar"><a href="#头像-Avatar" class="headerlink" title="头像 Avatar"></a>头像 Avatar</h4><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span>   <span class="comment"># 根目录的 source 文件夹下（主题目录的 source 文件夹下）</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>             <span class="comment"># 圆形头像</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>             <span class="comment"># 当鼠标滑过时头像旋转</span></span><br></pre></td></tr></table></figure><h4 id="社交链接"><a href="#社交链接" class="headerlink" title="社交链接"></a>社交链接</h4><p>严格遵循 <code>Key: /link/ || icon</code> 格式，icon 可以去 <span class="exturl" data-url="aHR0cHM6Ly9mb250YXdlc29tZS5jb20v">Font Awesome<i class="fa fa-external-link-alt"></i></span> 寻找。</p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>        <span class="comment"># 显示 icon</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">true</span>    <span class="comment"># 只显示 icon</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span>   </span><br></pre></td></tr></table></figure><h4 id="友情链接-Blogrolls"><a href="#友情链接-Blogrolls" class="headerlink" title="友情链接 Blogrolls"></a>友情链接 Blogrolls</h4><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-globe</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">友情链接</span>     <span class="comment"># 标题</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">block</span></span><br><span class="line"></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">Title:</span> <span class="string">https://example.com</span></span><br><span class="line">  <span class="attr">Title2:</span> <span class="string">https://example2.com</span></span><br></pre></td></tr></table></figure><h4 id="大纲目录-TOC"><a href="#大纲目录-TOC" class="headerlink" title="大纲目录 TOC"></a>大纲目录 TOC</h4><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 自动添加序号</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 自动换行</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 是否全部展开，值为 false 的时候只显示当前所在位置</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 最大层级深度</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="文章-Posts"><a href="#文章-Posts" class="headerlink" title="文章 Posts"></a>文章 Posts</h3><h4 id="预览-Preamble-Text"><a href="#预览-Preamble-Text" class="headerlink" title="预览 Preamble Text"></a>预览 Preamble Text</h4><p>NexT 会在文章标记 <code>&lt;!-- more --&gt;</code> 的位截断，以次来控制预览内容。</p><h4 id="文章显示标记-Post-Meta-Display"><a href="#文章显示标记-Post-Meta-Display" class="headerlink" title="文章显示标记 Post Meta Display"></a>文章显示标记 Post Meta Display</h4><p>NexT 默认支持文章的创建日期、更新日期、和文章分类显示。</p><blockquote><p>如果想要文章禁止显示标记信息，需要设置</p></blockquote><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span>       <span class="comment"># 设置为 false 可以禁用标记信息</span></span><br><span class="line">  <span class="attr">created_at:</span> <span class="literal">true</span>      </span><br><span class="line">  <span class="attr">updated_at:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>        <span class="comment"># 开启更新时间，需要设置站点根目录下 _config.yml 的 use_date_for_updated 格式 https://hexo.io/docs/configuration#Date-Time-format</span></span><br><span class="line">    <span class="attr">another_day:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>开启 <code>post_meta.updated_at</code> 选项，需要设置站点根目录下 _config.yml 的 use_date_for_updated 格式，<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvY29uZmlndXJhdGlvbiNEYXRlLVRpbWUtZm9ybWF0">https://hexo.io/docs/configuration#Date-Time-format<i class="fa fa-external-link-alt"></i></span></p><p>如果 <code>post_meta.another_day</code> 设置为 <code>true</code>，当创建时间和更新时间在同一天的时候，不显示更新时。</p><h4 id="文章字数统计-Post-Wordcount"><a href="#文章字数统计-Post-Wordcount" class="headerlink" title="文章字数统计 Post Wordcount"></a>文章字数统计 Post Wordcount</h4><p>首先需要在站点根目录下安装 <code>hexo-word-counter</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure><h4 id="相关热门文章-Related-Popular-Posts"><a href="#相关热门文章-Related-Popular-Posts" class="headerlink" title="相关热门文章 Related Popular Posts"></a>相关热门文章 Related Popular Posts</h4><p>安装 <code>hexo-related-popular-posts</code> : <code>npm install hexo-related-popular-posts</code></p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span>                  <span class="comment"># 自定义标题，保留为空以使用默认标题</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span>  <span class="comment"># 首页显示</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">5</span>           <span class="comment"># 最大相关文章数目</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0    # 热门文章和相关文章的混合比例</span></span><br><span class="line">    <span class="comment">#isDate: false        # 设置为 ture 表示显示文章日期</span></span><br><span class="line">    <span class="comment">#isImage: false       # 设置为 ture 表示显示文章缩略图</span></span><br><span class="line">    <span class="comment">#isExcerpt: false     # 设置为 ture 表示显示文章摘要</span></span><br></pre></td></tr></table></figure><h4 id="在线编辑-Post-Edit"><a href="#在线编辑-Post-Edit" class="headerlink" title="在线编辑 Post Edit"></a>在线编辑 Post Edit</h4><p>开启 <code>post_edit</code> 选项可以事项在线编辑文章功能（跳转到GitHub的博客源代码）</p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">post_edit:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/user-name/repo-name/edit/master/source/</span> <span class="comment"># 补充上 url 即可实现在线编辑文章功能</span></span><br></pre></td></tr></table></figure><h3 id="自定义页面-Custom-Pages"><a href="#自定义页面-Custom-Pages" class="headerlink" title="自定义页面 Custom Pages"></a>自定义页面 Custom Pages</h3><h4 id="创建-标签"><a href="#创建-标签" class="headerlink" title="创建 标签"></a>创建 标签</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">heox new page tags</span><br></pre></td></tr></table></figure><p>编辑 <code>source/tags/index.md</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2020-04-01 00:30:50</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>添加到菜单栏</p><figure class="highlight yml"><figcaption><span>_config.next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br></pre></td></tr></table></figure><p>使用标签，新建一篇测试文章</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>编辑 <code>source/_post/test.md</code></p><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><a href="#tags-1">格式1</a></li><li class="tab"><a href="#tags-2">格式2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tags-1"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: test</span><br><span class="line">tags:</span><br><span class="line">- tag1</span><br><span class="line">- tag2</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tags-2"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: test</span><br><span class="line">tags: [Testing, Another Tag]</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div></div></div><blockquote><p><strong>注意缩进</strong></p></blockquote><h4 id="公益-404-页面"><a href="#公益-404-页面" class="headerlink" title="公益 404 页面"></a>公益 404 页面</h4><p>在站点根目录下新建 404 页面</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure><p>编辑 <code>_posts/404/index.md</code></p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x27;404&#x27;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js&quot;</span></span></span></span><br><span class="line"><span class="xml">        charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;Back to home&quot;&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>添加 公益 404 页面到菜单栏</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="attr">commonweal:</span> <span class="string">/404/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-heartbeat</span></span><br></pre></td></tr></table></figure><h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><h4 id="谷歌收录"><a href="#谷歌收录" class="headerlink" title="谷歌收录"></a>谷歌收录</h4><h5 id="1-添加资源"><a href="#1-添加资源" class="headerlink" title="1. 添加资源"></a>1. 添加资源</h5><p>打开 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS93ZWJtYXN0ZXJz">Google Webmaster<i class="fa fa-external-link-alt"></i></span>，登录，添加资源，选择<em>网址前缀</em>输入博客地址；</p><p>之后是验证所有权，推荐 <em>HTML 标记</em> 验证：</p><ul><li>复制 meta 标签中的 <code>content</code> 值，添加到<code>Next Config</code> 中的<code>google_site_verification</code> 即可。</li></ul><h5 id="2-提交-sitemap-xml"><a href="#2-提交-sitemap-xml" class="headerlink" title="2.提交 sitemap.xml"></a>2.提交 sitemap.xml</h5><p>首先安装插件 <code>hexo-generator-sitemap</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>然后运行命令 <code> hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code> 生成站点地图，并上传到博客，之后就可以通过 <code>https://your-blog-url/sitemap.xml</code> 访问到站点地图。</p><p>在刚刚的网站左侧点击站点地图，输入站点地图网址 <code>https://your-blog-url/sitemap.xml</code>，提交即可。</p><h4 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h4><h5 id="1-添加资源-1"><a href="#1-添加资源-1" class="headerlink" title="1. 添加资源"></a>1. 添加资源</h5><p>打开<span class="exturl" data-url="aHR0cHM6Ly96aXl1YW4uYmFpZHUuY29tL3NpdGU=">Baidu Webmaster<i class="fa fa-external-link-alt"></i></span>，登录，点击<code>添加网站</code>，按步骤选择，在验证网址时选择<code>HTML 标签验证</code>，复制 <code>meta</code> 标签中的 <code>content</code> 值，添加到<code>Next Config</code> 中的<code>baidu_site_verification</code> 即可。</p><h5 id="2-提交-sitemap-xml-1"><a href="#2-提交-sitemap-xml-1" class="headerlink" title="2.提交 sitemap.xml"></a>2.提交 sitemap.xml</h5><p>在网站左侧点击<code>链接提交</code>，选择<code>sitmap</code>提交，输入站点地图网址 <code>https://your-blog-url/sitemap.xml</code>即可。</p><h3 id="Other-Webmaster"><a href="#Other-Webmaster" class="headerlink" title="Other Webmaster"></a>Other Webmaster</h3><p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL3Nlby5odG1sI1dlYm1hc3Rlci1Ub29scw==">https://theme-next.js.org/docs/theme-settings/seo.html#Webmaster-Tools<i class="fa fa-external-link-alt"></i></span></p><h2 id="第三方服务"><a href="#第三方服务" class="headerlink" title="第三方服务"></a>第三方服务</h2><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><h3 id="统计与分析"><a href="#统计与分析" class="headerlink" title="统计与分析"></a>统计与分析</h3><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;必读文档&quot;&gt;&lt;a href=&quot;#必读文档&quot; class=&quot;headerlink&quot; title=&quot;必读文档&quot;&gt;&lt;/a&gt;必读文档&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://theme-next.js.org/&quot;&gt;NexT 官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="Hexo" scheme="https://yingming006.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>启动 WSL 2时警告“参考的对象类型不支持尝试的操作”</title>
    <link href="https://yingming006.cn/wsl2-error-the-attempted-operation-is-not-supported-for-the-type-of-object-referenced/"/>
    <id>https://yingming006.cn/wsl2-error-the-attempted-operation-is-not-supported-for-the-type-of-object-referenced/</id>
    <published>2019-12-30T14:33:32.000Z</published>
    <updated>2021-03-15T04:26:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://sm.ms/image/8tUdMrmAfWqKHTw" target="_blank"><img data-src="https://i.loli.net/2019/12/30/8tUdMrmAfWqKHTw.png" ></a></p><p>出现图中所示错误的原因是 <strong>代理软件与 wsl2 的端口冲突</strong>。</p><a id="more"></a><p><del>在管理员身份模式下执行 <code>netsh winsock reset</code> ,可以重新启动 <code>WSL</code>。</del></p><blockquote><p>此操作会导致代理软件（proxifier）无法使用，请谨慎操作。<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9XU0wvaXNzdWVzLzQxOTQjaXNzdWVjb21tZW50LTYzNjQ2ODk4NA==">Github Issue1<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9XU0wvaXNzdWVzLzQxNzcjaXNzdWVjb21tZW50LTUwODgyNjcwOA==">Github Issue2<i class="fa fa-external-link-alt"></i></span></p></blockquote><p>使用 <code>NoLsp.exe</code>  <span class="exturl" data-url="aHR0cDovL3d3dy5wcm94aWZpZXIuY29tL3RtcC9UZXN0MjAyMDAyMjgvTm9Mc3AuZXhl">下载链接<i class="fa fa-external-link-alt"></i></span> </p><p><span class="exturl" data-url="aHR0cHM6Ly93d2EubGFuem91cy5jb20vaUtHc05qdDh0aWQ=">备用下载链接<i class="fa fa-external-link-alt"></i></span></p><p>使用管理员身份运行以下命令:</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">NoLsp.exe C:\Windows\system32\wsl.exe</span><br></pre></td></tr></table></figure><blockquote><p>参数为 wsl 的绝对路径（默认为 <code>C:\Windows\system32\wsl.exe</code>）</p></blockquote><p>问题原因及解决方案的讨论见 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9XU0wvaXNzdWVzLzQxNzcjaXNzdWVjb21tZW50LTU5NzczNjQ4Mg==">Gihub Issue<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://sm.ms/image/8tUdMrmAfWqKHTw&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://i.loli.net/2019/12/30/8tUdMrmAfWqKHTw.png&quot; &gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;出现图中所示错误的原因是 &lt;strong&gt;代理软件与 wsl2 的端口冲突&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="wsl" scheme="https://yingming006.cn/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>MySQL用户管理-创建、授权、查看、删除</title>
    <link href="https://yingming006.cn/mysql-user-manage-create-grant-select-drop/"/>
    <id>https://yingming006.cn/mysql-user-manage-create-grant-select-drop/</id>
    <published>2019-12-18T11:05:26.000Z</published>
    <updated>2021-03-15T04:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><ul><li><p>服务器版本：WSL 2 Ubuntu 18.04</p></li><li><p>MySQL版本：5.7.28-0ubuntu0.18.04.4 (Ubuntu)</p></li></ul><p>在开始之前，请确保服务器已安装 MySQL，并拥有 root 权限。</p><a id="more"></a><h3 id="创建一个新的用户账号"><a href="#创建一个新的用户账号" class="headerlink" title="创建一个新的用户账号"></a>创建一个新的用户账号</h3><p>MySQL 中的用户账号是由用户名和主机名组成，例如<code>&#39;root&#39;@&#39;localhost&#39;</code>。</p><p>运行以下命令即可创建一个用户名为<code>database_user</code>，密码为<code>user_password</code>的用户：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE USER &#39;&#96;database_user&#96;&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#96;user_password&#96;&#39;;</span><br></pre></td></tr></table></figure><p>上述命令中，主机名为<code>localhost</code>，表示只能从本地主机（即运行该 MySQL Server 的服务器），如果要授予该用户来自其他主机的访问权限，只需将<code>localhost</code>改为远程登录 IP 或者 <code>%</code>，<code>%</code>表示通配符，意味着该用户能够从任何主机进行远程连接。 </p><p>如果不确定用户是否存在，可以使用以下命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE USER IF NOT EXISTS &#39;&#96;database_user&#96;&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#96;user_password&#96;&#39;;</span><br></pre></td></tr></table></figure><h3 id="修改MySQL用户密码"><a href="#修改MySQL用户密码" class="headerlink" title="修改MySQL用户密码"></a>修改MySQL用户密码</h3><p>其实不同的 MySQL 版本修改用户密码的命令是不一样的。</p><p>在终端执行<code> mysql --version</code>可以查看 MySQL 版本。</p><p>如果是  MySQL 5.7.6 + 或者  MariaDB 10.1.20 +，需要使用以下命令来更改：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER USER &#39;database_user&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new_password&#39;;</span><br></pre></td></tr></table></figure><p>如果是  MySQL 5.7.5 - 或者  MariaDB 10.1.20 -，则需要使用以下命令来更改：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SET PASSWORD FOR &#39;database_user&#39;@&#39;localhost&#39; &#x3D; PASSWORD(&#39;new_password&#39;);</span><br></pre></td></tr></table></figure><h3 id="查看所有MySQL用户账号"><a href="#查看所有MySQL用户账号" class="headerlink" title="查看所有MySQL用户账号"></a>查看所有MySQL用户账号</h3><p>MySQL 中用户账户的全部信息都保存在<code>mysql.user</code>表中。</p><p>使用以下命名查看<code>mysql.user</code>表结构：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; DESC mysql.user;</span><br></pre></td></tr></table></figure><p>可以看到结构如下：</p><img data-src="https://i.loli.net/2019/12/18/AWn9bm2tR48vLoT.png" ><p>查看用户账号信息：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT user, host FROM mysql.user;</span><br></pre></td></tr></table></figure><p>结果和以下内容相似：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+------------------+-----------+</span><br><span class="line">| user             | host      |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| database_user    | %         |</span><br><span class="line">| database_user    | localhost |</span><br><span class="line">| debian-sys-maint | localhost |</span><br><span class="line">| mysql.session    | localhost |</span><br><span class="line">| mysql.sys        | localhost |</span><br><span class="line">| root             | localhost |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="删除MySQL用户账号"><a href="#删除MySQL用户账号" class="headerlink" title="删除MySQL用户账号"></a>删除MySQL用户账号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; DROP USER IF EXISTS &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><h3 id="给MySQL用户授权"><a href="#给MySQL用户授权" class="headerlink" title="给MySQL用户授权"></a>给MySQL用户授权</h3><p> MySQL支持的权限的完整列表 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuL2dyYW50Lmh0bWw=">点这里<i class="fa fa-external-link-alt"></i></span>。</p><p>这里介绍几个常用的例子。</p><p>授予指定用户所有权限：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON database_name.* TO &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><p>授予所有用户所有权限：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><p>授予指定用户对指定表所有权限：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON database_name.table_name TO &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><p>授予指定用户对指定表的指定权限：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; GRANT SELECT, INSERT, DELETE ON database_name.* TO database_user@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><h3 id="撤销MySQL用户权限"><a href="#撤销MySQL用户权限" class="headerlink" title="撤销MySQL用户权限"></a>撤销MySQL用户权限</h3><p>撤销用户所有权限：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; REVOKE ALL PRIVILEGES ON database_name.* TO &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><h3 id="显示MySQL用户权限"><a href="#显示MySQL用户权限" class="headerlink" title="显示MySQL用户权限"></a>显示MySQL用户权限</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW GRANTS FOR &#39;database_user&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure><img data-src="https://i.loli.net/2019/12/18/xcUtA1OnaCZWd4j.png" ><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>该教程总结了 MySQL 用户的基本管理实例，如果向了解更多，请参考 <span class="exturl" data-url="aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9yZWZtYW4vNS43L2VuLw==">MySQL 5.7 官方文档<i class="fa fa-external-link-alt"></i></span>。</p><p>感谢：<span class="exturl" data-url="aHR0cHM6Ly9saW51eGl6ZS5jb20vcG9zdC9ob3ctdG8tbWFuYWdlLW15c3FsLWRhdGFiYXNlcy1hbmQtdXNlcnMtZnJvbS10aGUtY29tbWFuZC1saW5lLw==">How to Manage MySQL Databases and Users from the Command Line<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;测试环境&quot;&gt;&lt;a href=&quot;#测试环境&quot; class=&quot;headerlink&quot; title=&quot;测试环境&quot;&gt;&lt;/a&gt;测试环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;服务器版本：WSL 2 Ubuntu 18.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL版本：5.7.28-0ubuntu0.18.04.4 (Ubuntu)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在开始之前，请确保服务器已安装 MySQL，并拥有 root 权限。&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="mysql" scheme="https://yingming006.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>解决 win10 Postman 无法打开的问题&quot;Could not open Postman&quot;</title>
    <link href="https://yingming006.cn/fix-win10-cannot-open-postman/"/>
    <id>https://yingming006.cn/fix-win10-cannot-open-postman/</id>
    <published>2019-12-10T12:57:29.000Z</published>
    <updated>2021-03-15T04:32:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境参数：<br>win 10 1903<br>Postman 7.13.0</p><p>安装完 Postman 打开后会出现下列情况<br><img data-src="https://i.loli.net/2019/12/10/c9Q2EyGLZAWIPaD.png" width=300 ></p><p>先打开任务管理器，结束 Postman 进程</p><p>然后删除 Postman 本地数据<br><code>C:\Users\&lt;user&gt;\AppData\Roaming\Postman</code></p><p>完成后再打开就可以了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;环境参数：&lt;br&gt;win 10 1903&lt;br&gt;Postman 7.13.0&lt;/p&gt;
&lt;p&gt;安装完 Postman 打开后会出现下列情况&lt;br&gt;&lt;img data-src=&quot;https://i.loli.net/2019/12/10/c9Q2EyGLZAWIPaD.png&quot;</summary>
      
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="win10" scheme="https://yingming006.cn/tags/win10/"/>
    
  </entry>
  
  <entry>
    <title>Maven 简介和 pom.xml 文件简析</title>
    <link href="https://yingming006.cn/maven-intro/"/>
    <id>https://yingming006.cn/maven-intro/</id>
    <published>2019-11-21T09:52:42.000Z</published>
    <updated>2021-03-15T04:34:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Maven-简介"><a href="#Maven-简介" class="headerlink" title="Maven 简介"></a>Maven 简介</h2><p>Maven 是一个项目管理和构建自动化工具，可以用于构建和管理任何基于Java的项目。它基于项目对象模型(POM)的概念来管理项目的构建、报告和文档。</p><a id="more"></a><p>Maven 使用约定优于配置的原则，它要求在没有定制之前，所有的项目都有如下的结构：</p><table><thead><tr><th>目录</th><th>目的</th></tr></thead><tbody><tr><td>${basedir}</td><td>存放pom.xml和所有的子目录</td></tr><tr><td>${basedir}/src/main/java</td><td>项目的java源代码</td></tr><tr><td>${basedir}/src/main/resources</td><td>项目的资源，比如说property文件，springmvc.xml</td></tr><tr><td>${basedir}/src/test/java</td><td>项目的测试类，比如说Junit代码</td></tr><tr><td>${basedir}/src/test/resources</td><td>测试用用的资源</td></tr><tr><td>${basedir}/src/main/webapp/WEB-INF</td><td>web应用文件目录，web项目的信息，比如存放web.xml、本地图片、jsp视图页面</td></tr><tr><td>${basedir}/target</td><td>打包输出目录</td></tr><tr><td>${basedir}/target/classes</td><td>编译输出目录</td></tr><tr><td>${basedir}/target/test-classes</td><td>测试编译输出目录</td></tr></tbody></table><h2 id="pom-xml-文件简析"><a href="#pom-xml-文件简析" class="headerlink" title="pom.xml 文件简析"></a>pom.xml 文件简析</h2><blockquote><p>该pom.xml文件来自<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dlZWtpZGVhL3NwcmluZy1ib290LXBsdXM=">spring-boot-plus<i class="fa fa-external-link-alt"></i></span>，做了简化处理。</p></blockquote><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当前pom版本，默认4.0.0 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 公司或者组织的唯一标志，通常是反写域名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.geekidea<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 本项目的唯一ID --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-plus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版本号 (snapshot 快照、 alpha 内部测试、 beta 公测、 Release 稳定版、 GA 正式发布) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 打包方式 默认是jar (war zip pom) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>spring-boot-plus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目简介 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>spring-boot-plus Project<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 项目地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/geekideaio/spring-boot-plus<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开源信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>spring-boot-plus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>geekidea<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>geekidea@qq.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 项目配置信息，编码方式，各依赖、插件版本号，在pom中的其它地方可以直接引用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project-parent.version</span>&gt;</span>$&#123;parent.version&#125;<span class="tag">&lt;/<span class="name">project-parent.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.1.7.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis-plus-boot-starter.version</span>&gt;</span>3.1.2<span class="tag">&lt;/<span class="name">mybatis-plus-boot-starter.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven-compiler-plugin.version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">maven-compiler-plugin.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 依赖管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 每个dependency都对应这一个jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 作用域（compile 编译范围、provided 已提供范围、runtime 运行时范围、test 测试范围、system 系统范围） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 排除依赖传递 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>***<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>***<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--MAVEN打包选择运行环境--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1:local(默认) 本地 2:dev:开发环境 3:test 4:uat 用户验收测试 5.prod:生产环境 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>local<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profileActive</span>&gt;</span>local<span class="tag">&lt;/<span class="name">profileActive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profileActive</span>&gt;</span>dev<span class="tag">&lt;/<span class="name">profileActive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>false<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>test<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profileActive</span>&gt;</span>test<span class="tag">&lt;/<span class="name">profileActive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>false<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>uat<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profileActive</span>&gt;</span>uat<span class="tag">&lt;/<span class="name">profileActive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>false<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">profileActive</span>&gt;</span>prod<span class="tag">&lt;/<span class="name">profileActive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>false<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Maven-简介&quot;&gt;&lt;a href=&quot;#Maven-简介&quot; class=&quot;headerlink&quot; title=&quot;Maven 简介&quot;&gt;&lt;/a&gt;Maven 简介&lt;/h2&gt;&lt;p&gt;Maven 是一个项目管理和构建自动化工具，可以用于构建和管理任何基于Java的项目。它基于项目对象模型(POM)的概念来管理项目的构建、报告和文档。&lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="maven" scheme="https://yingming006.cn/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>SQL命令:DDL,DQL,DML,DCL和TCL</title>
    <link href="https://yingming006.cn/sql-commond-DDL-DQL-DML-DCL-TCL/"/>
    <id>https://yingming006.cn/sql-commond-DDL-DQL-DML-DCL-TCL/</id>
    <published>2019-11-20T14:51:03.000Z</published>
    <updated>2021-03-15T04:37:24.000Z</updated>
    
    <content type="html"><![CDATA[<img data-src="https://i.loli.net/2019/11/14/ptPu9y2gIsFjl7U.png" ><p>SQL 是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。 SQL使用某些命令（例如，创建，删除，插入等）来执行所需的任务。 </p><a id="more"></a><p>SQL 命令主要由以下几类：</p><ul><li>DDL – Data Definition Language</li><li>DQl – Data Query Language</li><li>DML – Data Manipulation Language</li><li>DCL – Data Control Language</li><li>TCL – Transaction Control Language </li></ul><h3 id="1-DDL-–-Data-Definition-Language"><a href="#1-DDL-–-Data-Definition-Language" class="headerlink" title="1. DDL – Data Definition Language"></a>1. DDL – Data Definition Language</h3><p>DDL：创建和修改数据库中<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2Vla3Nmb3JnZWVrcy5vcmcvZGF0YWJhc2Utb2JqZWN0cy1pbi1kYm1zLw==">数据库对象<i class="fa fa-external-link-alt"></i></span>（Table ,  View 等）结构。</p><ul><li><p>CREATE： 在数据库中创建对象</p><p>创建数据库：<code> CREATE DATABASE IF NOT EXISTS test_db;</code></p></li><li><p>DROP： 从数据库中删除对象</p><p>删除数据库：<code> DROP DATABASE IF NOT EXISTS test_db;</code> </p></li><li><p>ALTER： 修改数据库对象</p><p>修改数据表：<code>ALTER TABLE tb_emp1 ADD COLUMN col1 INT FIRST;</code>（在表的第一列添加一个 int 类型的字段 col1 ）</p></li><li><p>TRUNCATE：从表中删除所有记录</p><p><code>TRUNCATE TABLE  table_name;</code></p></li><li><p>COMMETN：添加注释</p></li><li><p>RENAME：重命名数据库中的表名，字段名</p></li></ul><h3 id="2-DQL-Data-Query-Language"><a href="#2-DQL-Data-Query-Language" class="headerlink" title="2. DQL -  Data Query Language"></a>2. DQL -  <strong>Data Query Language</strong></h3><p>DQL ：用于用于从数据库查询数据。 </p><ul><li>SELECT</li></ul><h3 id="3-DML-Data-Manipulation-Language"><a href="#3-DML-Data-Manipulation-Language" class="headerlink" title="3. DML - Data Manipulation Language"></a>3. DML - Data Manipulation Language</h3><p>DML：  用于在添加（插入），删除和修改（更新）数据 。</p><ul><li>INSERT：插入数据</li><li>UPDATE：更新数据</li><li>DELETE：删除数据</li></ul><h3 id="4-DCL-–-Data-Control-Language"><a href="#4-DCL-–-Data-Control-Language" class="headerlink" title="4. DCL – Data Control Language"></a>4. DCL – Data Control Language</h3><p>DCL： 授权，角色控制等。</p><ul><li>GRANT：为用户赋予访问权限</li><li>REVOKE：撤回授权权限</li></ul><h3 id="5-TCL-–-Transaction-Control-Language"><a href="#5-TCL-–-Transaction-Control-Language" class="headerlink" title="5. TCL – Transaction Control Language"></a>5. TCL – Transaction Control Language</h3><p>TCL：处理数据库中的事务。</p><ul><li><p>COMMIT：提交一个事务</p></li><li><p>SAVEPOINT：在事务中设置保存点，可以回滚到此保存点</p></li><li><p>ROLLBACK：回滚事务</p></li><li><p>SET TRANSACTION：改变事务选项</p></li></ul><p>参考：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2Vla3Nmb3JnZWVrcy5vcmcvc3FsLWRkbC1kcWwtZG1sLWRjbC10Y2wtY29tbWFuZHMv">SQL|DDL,DQL,DML,DCL and TCL Commands - GeeksforGeeks<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;https://i.loli.net/2019/11/14/ptPu9y2gIsFjl7U.png&quot; &gt;

&lt;p&gt;SQL 是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。 SQL使用某些命令（例如，创建，删除，插入等）来执行所需的任务。 &lt;/p&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="sql" scheme="https://yingming006.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>三层架构和MVC模式</title>
    <link href="https://yingming006.cn/mvc/"/>
    <id>https://yingming006.cn/mvc/</id>
    <published>2019-11-09T12:07:26.000Z</published>
    <updated>2021-03-15T04:39:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>三层架构和 MVC 模式是两个完全不一样的概念。</p><p>先来看下二者的定义。</p><blockquote><p><strong>三层架构</strong>（Three-Tier Architecture）： 是最基本的项目分层结果。秉承“高内聚，低耦合”的思想，将整个业务应用划分为：UI层（表示层）、BLL（业务逻辑层）、DAL层（数据访问层）。系统的主要功能和业务逻辑在业务逻辑层进行处理。 </p><p>UI：表示层，也叫做用户界面层，用来接受用户的请求，以及数据返回。</p><p>BLL：业务逻辑层，主要负责对数据层的操作，对数据业务逻辑的处理。</p><p>DAL：数据访问层，直接操作数据库，包括增、删、改、查、备份、还原等操作。</p></blockquote><a id="more"></a><img data-src="https://i.loli.net/2019/11/04/q5PbV3OUKAIxNCL.png" ><blockquote><p><strong>MVC</strong> 即 Model View Controller 。MVC 是一种很好的设计模式的综合应用。 </p><p>M 即Model（模型层），主要负责处理业务逻辑以及与数据库的交互。</p><p>V 即View（视图层），主要用于显示数据和提交数据。</p><p>C 即Controller（控制器），主要用于接受请求并控制请求转发。</p></blockquote><img data-src="https://i.loli.net/2019/11/04/cCOUalP7h6HsJ3x.png" ><p>关于二者的区别呢，主要有以下几点：</p><p>① <strong>MVC是一种复合设计模式，而三层是一个软件架构（主要）。</strong></p><p>软件架构是用接口来实现的，而设计模式则是一种设计思想、设计理念的升华，也可以算做一种解决方案。一个系统一般只有一个软件架构，而可以有多个设计模式，因为设计模式是可以复用的。</p><p>② 在三层架构中没有定义Controller的概念，而MVC中也没有将业务的逻辑访问看成两个层。当然了。在三层中也提到了Model，但是三层架构中Model(Entry)的概念与MVC中Model的概念是不一样的，“三层”中典型的Model层是以实体类构成的，而MVC里，则是由业务逻辑与访问数据组成的。</p><p>③三层架构划分为：View(UI)、BIZ（BLL）、ADO（DAL）、Entity（Model）、Controller。而MVC把 BIZ（BLL）、ADO（DAL）、Model（Entity） 统一称之为 模型(MODEL)，得到：View、Controller、模型(MODEL) 三层。</p><p>但是，三层架构和 MVC 模式的核心却是一样的，即 <strong>分层，解耦</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;三层架构和 MVC 模式是两个完全不一样的概念。&lt;/p&gt;
&lt;p&gt;先来看下二者的定义。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;三层架构&lt;/strong&gt;（Three-Tier Architecture）： 是最基本的项目分层结果。秉承“高内聚，低耦合”的思想，将整个业务应用划分为：UI层（表示层）、BLL（业务逻辑层）、DAL层（数据访问层）。系统的主要功能和业务逻辑在业务逻辑层进行处理。 &lt;/p&gt;
&lt;p&gt;UI：表示层，也叫做用户界面层，用来接受用户的请求，以及数据返回。&lt;/p&gt;
&lt;p&gt;BLL：业务逻辑层，主要负责对数据层的操作，对数据业务逻辑的处理。&lt;/p&gt;
&lt;p&gt;DAL：数据访问层，直接操作数据库，包括增、删、改、查、备份、还原等操作。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="mvc" scheme="https://yingming006.cn/tags/mvc/"/>
    
  </entry>
  
  <entry>
    <title>用 Java 实现 LRU算法</title>
    <link href="https://yingming006.cn/LRU-in-java/"/>
    <id>https://yingming006.cn/LRU-in-java/</id>
    <published>2019-10-21T02:13:44.000Z</published>
    <updated>2021-03-15T04:42:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LRU-简介"><a href="#LRU-简介" class="headerlink" title="LRU 简介"></a>LRU 简介</h2><p>LRU（Least Recently Used）,即最近最少使用。LRU是一种算法，常被应用于操作系统的内存页面置换算法（其他还有FIFO，LFU等）和缓存。</p><p>LRU算法的设计原则是：如果一个数据在最近一段时间没有被访问到，那么在将来它被访问的可能性也很小。也就是说，当限定的空间已存满数据时，应当把最久没有被访问到的数据淘汰。</p><a id="more"></a><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>LRU 常用的实现思路是使用 双向链表 + HashMap 的数据结构。链表可以维护数据的有序性，方便数据的插入删除。而HashMap可以使查找删除操作时间复杂度为O（1）。</p><ul><li>访问某个节点时，将其从原来的位置删除，并重新插入到链表头部。这样就能保证链表尾部存储的就是最近最久未使用的节点，当节点数量大于缓存最大空间时就淘汰链表尾部的节点。</li><li>为了使删除操作时间复杂度为 O(1)，就不能采用遍历的方式找到某个节点。HashMap 存储着 Key 到节点的映射，通过 Key 就能以 O(1) 的时间得到节点，然后再以 O(1) 的时间将其从双向队列中删除。</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> lru;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by yingming006 on 2019-09-18 08:47.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRU</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node head;</span><br><span class="line">    <span class="keyword">private</span> Node tail;</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;K, Node&gt; map;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        Node pre;</span><br><span class="line">        Node next;</span><br><span class="line">        K k;</span><br><span class="line">        V v;</span><br><span class="line"></span><br><span class="line">        Node(K k, V v) &#123;</span><br><span class="line">            <span class="keyword">this</span>.k = k;</span><br><span class="line">            <span class="keyword">this</span>.v = v;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRU</span><span class="params">(<span class="keyword">int</span> maxSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.maxSize = maxSize;</span><br><span class="line">        <span class="keyword">this</span>.map = <span class="keyword">new</span> HashMap&lt;&gt;(maxSize * <span class="number">4</span> / <span class="number">3</span> + <span class="number">1</span>); <span class="comment">// HashMap 的初始化</span></span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> Node(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        tail = <span class="keyword">new</span> Node(<span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        head.next = tail;</span><br><span class="line">        tail.pre = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(K key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!map.containsKey(key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Node node = map.get(key);</span><br><span class="line">        unlink(node);</span><br><span class="line">        appendHead(node);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node.v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(key)) &#123;</span><br><span class="line">            Node node = map.get(key);</span><br><span class="line">            unlink(node);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Node node = <span class="keyword">new</span> Node(key, value);</span><br><span class="line">        map.put(key, node);</span><br><span class="line">        appendHead(node);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (map.size() &gt; maxSize) &#123;</span><br><span class="line">            Node toRemove = removeTail();</span><br><span class="line">            map.remove(toRemove.k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlink</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">        Node pre = node.pre;</span><br><span class="line">        Node next = node.next;</span><br><span class="line"></span><br><span class="line">        pre.next = next;</span><br><span class="line">        next.pre = pre;</span><br><span class="line"></span><br><span class="line">        node.next = <span class="keyword">null</span>;</span><br><span class="line">        node.pre = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">appendHead</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">        Node next = head.next;</span><br><span class="line">        node.next = next;</span><br><span class="line">        next.pre = node;</span><br><span class="line">        node.pre = head;</span><br><span class="line">        head.next = node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">removeTail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Node node = tail.pre;</span><br><span class="line">        Node pre = node.pre;</span><br><span class="line">        tail.pre = pre;</span><br><span class="line">        pre.next = tail;</span><br><span class="line"></span><br><span class="line">        node.next = <span class="keyword">null</span>;</span><br><span class="line">        node.pre = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;K&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Iterator&lt;K&gt;() &#123;</span><br><span class="line">            <span class="keyword">private</span> Node cur = head.next;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> cur != tail;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> K <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Node node = cur;</span><br><span class="line">                cur = cur.next;</span><br><span class="line">                <span class="keyword">return</span> node.k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;LRU-简介&quot;&gt;&lt;a href=&quot;#LRU-简介&quot; class=&quot;headerlink&quot; title=&quot;LRU 简介&quot;&gt;&lt;/a&gt;LRU 简介&lt;/h2&gt;&lt;p&gt;LRU（Least Recently Used）,即最近最少使用。LRU是一种算法，常被应用于操作系统的内存页面置换算法（其他还有FIFO，LFU等）和缓存。&lt;/p&gt;
&lt;p&gt;LRU算法的设计原则是：如果一个数据在最近一段时间没有被访问到，那么在将来它被访问的可能性也很小。也就是说，当限定的空间已存满数据时，应当把最久没有被访问到的数据淘汰。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>mysql-note</title>
    <link href="https://yingming006.cn/mysql-note/"/>
    <id>https://yingming006.cn/mysql-note/</id>
    <published>2019-10-21T02:12:24.000Z</published>
    <updated>2021-03-15T04:44:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据库（DATABASE）的创建、删除、修改和查看"><a href="#1-数据库（DATABASE）的创建、删除、修改和查看" class="headerlink" title="1. 数据库（DATABASE）的创建、删除、修改和查看"></a>1. 数据库（DATABASE）的创建、删除、修改和查看</h2><h3 id="创建数据库："><a href="#创建数据库：" class="headerlink" title="创建数据库："></a>创建数据库：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] &lt;数据库名&gt;</span><br><span class="line">[[DEFAULT] CHARACTER SET &lt;字符集名&gt;] [[DEFAULT] COLLATE &lt;校对规则名&gt;];</span><br></pre></td></tr></table></figure><a id="more"></a><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建一个数据库，命名为 test_db_char，指定其默认字符集为 utf8，默认校对规则为 utf8_chinese_ci（简体中文，不区分大小写）</span><br><span class="line">CREATE DATABASE IF NOT EXISTS test_db_char</span><br><span class="line">DEFAULT CHARACTER SET utf8</span><br><span class="line">DEFAULT COLLATE utf8_chinese_ci;</span><br></pre></td></tr></table></figure><h3 id="删除数据库："><a href="#删除数据库：" class="headerlink" title="删除数据库："></a>删除数据库：</h3><p><code>DROP DATABASE [ IF EXISTS ] &lt;数据库名&gt; </code></p><p>示例：<code>DROP DATABASE IF EXISTS test_db_del;</code></p><h3 id="修改数据库："><a href="#修改数据库：" class="headerlink" title="修改数据库："></a>修改数据库：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE [数据库名] &#123; [ DEFAULT ] CHARACTER SET &lt;字符集名&gt; |</span><br><span class="line">[ DEFAULT ] COLLATE &lt;校对规则名&gt;&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 将数据库 test_db_char 的指定字符集修改为 gb2312，默认校对规则修改为 utf8_unicode_ci</span><br><span class="line">ALTER DATABASE test_db_char</span><br><span class="line">DEFAULT CHARACTER SET gb2312</span><br><span class="line">DEFAULT COLLATE gb2312_chinese_ci;</span><br></pre></td></tr></table></figure><h3 id="查看数据库："><a href="#查看数据库：" class="headerlink" title="查看数据库："></a>查看数据库：</h3><p><code>SHOW DATABASES [LIKE &#39;数据库名&#39;];</code></p><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h2><ul><li>数字类型<ul><li>整数:  <strong>TINYINT</strong>、SMALLINT、MEDIUMINT、<strong>INT</strong>、<strong>BIGINT</strong> </li><li>浮点数: FLOAT 和 DOUBLE </li><li>定点数： <strong>DECIMAL</strong> </li></ul></li><li>日期和时间:  YEAR、TIME、DATE、DATETIME 和 <strong>TIMESTAMP</strong> </li><li>字符串类型：<strong>CHAR</strong>、<strong>VARCHAR</strong>、BINARY、VARBINARY、BLOB、<strong>TEXT</strong>、ENUM 和 SET </li><li>二进制(可用来存储图片、音乐等):  BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB </li></ul><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><h4 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h4><table><thead><tr><th>type</th><th>Storage</th><th>Signed（Unsigned）</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 Bytes</td><td>-128~127（255）</td></tr><tr><td>SMALLINT</td><td>2 Bytes</td><td>-32768~32767（65535）</td></tr><tr><td>MEDIUMINT</td><td>3 Bytes</td><td>-8388608~8388607（16777215）</td></tr><tr><td>INT</td><td>4 Bytes</td><td>-2147483648~2147483647（4294967295）（大约42亿）</td></tr><tr><td>BIGINT</td><td>8 Bytes</td><td>-9223372036854775808〜9223372036854775807（18446744073709551615）</td></tr></tbody></table><h4 id="浮点型和定点型"><a href="#浮点型和定点型" class="headerlink" title="浮点型和定点型"></a>浮点型和定点型</h4><table><thead><tr><th>属性</th><th>存储空间</th><th>可做精确计算</th></tr></thead><tbody><tr><td>FLOAT(M, D)</td><td>4 bytes</td><td>否</td></tr><tr><td>DOUBLE(M, D)</td><td>8 bytes</td><td>否</td></tr><tr><td>DECIMAL(M, D)</td><td>M+2 bytes</td><td>是</td></tr></tbody></table><blockquote><p>M表示该值的总共长度, D表示小数点后面的长度, M和D又称为精度和标度；</p><p>不论是定点还是浮点类型，如果用户指定的精度超出精度范围，则会四舍五入进行处理；</p><p>如float(7,4), 最大可存入-999.9999, 如果尝试存入999.00009, 则存入结果为999.0001</p></blockquote><h3 id="时间类型"><a href="#时间类型" class="headerlink" title="时间类型"></a>时间类型</h3><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td><td>1970-01-01 00:00:01 UTC ~ 2038-01-19 03:14:07 UTC</td><td>4 个字节</td></tr></tbody></table><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><table><thead><tr><th>类型</th><th>长度</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255字节</td></tr><tr><td>VARCHAR</td><td>0-65535 字节</td></tr><tr><td>TEXT</td><td>0-65 535字节</td></tr></tbody></table><blockquote><ul><li>（1）<strong>char</strong>:  定长格式，但是长度范围是 0~255. 当你想要储存一个长度不足 255 的字符时，Mysql 会用空格来填充剩下的字符。因此在读取数据时，char 类型的数据要进行处理，把后面的空格去除。</li></ul></blockquote><ul><li>（2）<strong>varchar</strong>:  关于 varchar，有的说最大长度是 255，也有的说是 65535，查阅很多资料后发现是这样的：varchar 类型在 5.0.3 以下的版本中的最大长度限制为 255，而在 5.0.3 及以上的版本中，varchar 数据类型的长度支持到了 65535，也就是说可以存放 65532 个字节（注意是字节而不是字符！！！）的数据（起始位和结束位占去了3个字节），也就是说，在 5.0.3 以下版本中需要使用固定的 TEXT 或 BLOB 格式存放的数据可以在高版本中使用可变长的 varchar 来存放，这样就能有效的减少数据库文件的大小。</li><li>（3）<strong>text</strong>: 与 char 和 varchar 不同的是，text 不可以有默认值，其最大长度是 2 的 16 次方-1<blockquote><p><strong>总结起来，有几点：</strong></p><ul><li>经常变化的字段用 varchar</li><li>知道固定长度的用 char</li><li>尽量用 varchar</li><li>超过 255 字符的只能用 varchar 或者 text</li><li>能用 varchar 的地方不用 text</li></ul><p><strong>该部分引用自<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9teXNxbC9teXNxbC1kYXRhLXR5cGVzLmh0bWw=">菜鸟教程<i class="fa fa-external-link-alt"></i></span></strong></p></blockquote></li></ul><h2 id="3-数据表（TABLE）的创建、删除、修改和查看"><a href="#3-数据表（TABLE）的创建、删除、修改和查看" class="headerlink" title="3.数据表（TABLE）的创建、删除、修改和查看"></a>3.数据表（TABLE）的创建、删除、修改和查看</h2><h3 id="创建数据表："><a href="#创建数据表：" class="headerlink" title="创建数据表："></a>创建数据表：</h3><p><code>CREATE TABLE &lt;表名&gt; ([表定义选项])[表选项][分区选项];</code></p><p> 其中，<code>[表定义选项]</code>的格式为：  <code>&lt;列名1&gt; &lt;类型1&gt; [,…] &lt;列名n&gt; &lt;类型n&gt; </code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;runoob_tbl&#96;(</span><br><span class="line">&#96;runoob_id&#96; INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">&#96;runoob_title&#96; VARCHAR(100) NOT NULL DEFAULT &#39;RUNOOB_TITLE&#39;,</span><br><span class="line">&#96;runoob_author&#96; VARCHAR(40) NOT NULL DEFAULT &#39;RUNOOB_AUTHOR&#39;,</span><br><span class="line">&#96;runoob_context&#96; TEXT NULL,</span><br><span class="line">&#96;submission_date&#96; DATE,</span><br><span class="line">PRIMARY KEY ( &#96;runoob_id&#96; )</span><br><span class="line">)ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8;</span><br></pre></td></tr></table></figure><ul><li>AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。</li><li>PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。</li><li>ENGINE 设置存储引擎，CHARSET 设置编码。</li></ul><h3 id="删除数据表："><a href="#删除数据表：" class="headerlink" title="删除数据表："></a>删除数据表：</h3><p><code>DROP TABLE [IF EXISTS] &lt;表名&gt; [ , &lt;表名1&gt; , &lt;表名2&gt;] …</code></p><p>示例：<code>DROP TABLE IF EXISTS runoob_tbl</code></p><h3 id="修改数据表："><a href="#修改数据表：" class="headerlink" title="修改数据表："></a>修改数据表：</h3><p><code>ALTER TABLE &lt;表名&gt; [修改选项] </code></p><p>修改选项的语法格式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123; ADD COLUMN &lt;列名&gt; &lt;类型&gt;</span><br><span class="line">| CHANGE COLUMN &lt;旧列名&gt; &lt;新列名&gt; &lt;新列类型&gt;</span><br><span class="line">| ALTER COLUMN &lt;列名&gt; &#123; SET DEFAULT &lt;默认值&gt; | DROP DEFAULT &#125;</span><br><span class="line">| MODIFY COLUMN &lt;列名&gt; &lt;类型&gt;</span><br><span class="line">| DROP COLUMN &lt;列名&gt;</span><br><span class="line">| RENAME TO &lt;新表名&gt; &#125;</span><br></pre></td></tr></table></figure><h4 id="添加字段："><a href="#添加字段：" class="headerlink" title="添加字段："></a>添加字段：</h4><p><code>ALTER TABLE &lt;表名&gt; ADD &lt;新字段名&gt; &lt;数据类型&gt; [约束条件] [FIRST|AFTER 已存在的字段名]；</code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 修改表 tb_emp1 的结构，在表的第一列添加一个 int 类型的字段 col1</span><br><span class="line">ALTER TABLE tb_emp1</span><br><span class="line">ADD COLUMN col1 INT FIRST;</span><br></pre></td></tr></table></figure><blockquote><p>提示：“FIRST 或 AFTER 已存在的字段名”用于指定新增字段在表中的位置，如果 SQL 语句中没有这两个参数，则默认将新添加的字段设置为数据表的最后列。 </p></blockquote><h4 id="删除字段："><a href="#删除字段：" class="headerlink" title="删除字段："></a>删除字段：</h4><p><code>ALTER TABLE &lt;表名&gt; DROP &lt;字段名&gt;；</code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 修改表 tb_emp1 的结构，删除 col2 字段</span><br><span class="line">ALTER TABLE tb_emp1</span><br><span class="line">DROP col2;</span><br></pre></td></tr></table></figure><h4 id="修改字段数据类型："><a href="#修改字段数据类型：" class="headerlink" title="修改字段数据类型："></a>修改字段数据类型：</h4><p><code>ALTER TABLE &lt;表名&gt; MODIFY &lt;字段名&gt; &lt;数据类型&gt;</code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 修改表 tb_emp1 的结构，将 name 字段的数据类型修改成 VARCHAR(30)</span><br><span class="line">ALTER TABLE tb_emp1</span><br><span class="line">MODIFY name VARCHAR(30);</span><br></pre></td></tr></table></figure><h4 id="修改字段名称："><a href="#修改字段名称：" class="headerlink" title="修改字段名称："></a>修改字段名称：</h4><p><code>ALTER TABLE &lt;表名&gt; CHANGE &lt;旧字段名&gt; &lt;新字段名&gt; &lt;新数据类型&gt;； </code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 修改表 tb_emp1 的结构，将 col1 字段名称改为 col3，同时将数据类型变为 CHAR(30)</span><br><span class="line">ALTER TABLE tb_emp1</span><br><span class="line">CHANGE col1 col3 CHAR(30);</span><br></pre></td></tr></table></figure><blockquote><p> 如果不需要修改字段的数据类型，可以将新数据类型设置成与原来一样，但数据类型不能为空 </p></blockquote><h4 id="修改表名："><a href="#修改表名：" class="headerlink" title="修改表名："></a>修改表名：</h4><p><code>ALTER TABLE &lt;旧表名&gt; RENAME [TO] &lt;新表名&gt;；</code></p><p>示例：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE tb_emp1</span><br><span class="line">RENAME TO tb_emp2;</span><br></pre></td></tr></table></figure><h3 id="查看数据表结构："><a href="#查看数据表结构：" class="headerlink" title="查看数据表结构："></a>查看数据表结构：</h3><p><code>DESC &lt;表名&gt;;</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; desc tbl;</span><br><span class="line">+-----------------+------------------+------+-----+---------------+----------------+</span><br><span class="line">| Field           | Type             | Null | Key | Default       | Extra          |</span><br><span class="line">+-----------------+------------------+------+-----+---------------+----------------+</span><br><span class="line">| test            | int(11)          | YES  |     | NULL          |                |</span><br><span class="line">| runoob_id       | int(10) unsigned | NO   | PRI | NULL          | auto_increment |</span><br><span class="line">| runoob_title    | varchar(100)     | NO   |     | RUNOOB_TITLE  |                |</span><br><span class="line">| runoob_author   | varchar(40)      | NO   |     | RUNOOB_AUTHOR |                |</span><br><span class="line">| runoob_context  | text             | YES  |     | NULL          |                |</span><br><span class="line">| submission_date | date             | YES  |     | NULL          |                |</span><br><span class="line">+-----------------+------------------+------+-----+---------------+----------------+</span><br></pre></td></tr></table></figure><p>查看表结构：</p><p><code>SHOW CREATE TABLE &lt;表名&gt;;</code></p><h2 id="4-数据表（TABLE）的查询"><a href="#4-数据表（TABLE）的查询" class="headerlink" title="4.数据表（TABLE）的查询"></a>4.数据表（TABLE）的查询</h2><h3 id="MySQL-SELECT-基本语法"><a href="#MySQL-SELECT-基本语法" class="headerlink" title="MySQL SELECT 基本语法"></a>MySQL SELECT 基本语法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">&#123;* | &lt;字段列名&gt;&#125;</span><br><span class="line">[</span><br><span class="line">FROM &lt;表 1&gt;, &lt;表 2&gt;…</span><br><span class="line">[WHERE &lt;表达式&gt;</span><br><span class="line">[GROUP BY &lt;group by definition&gt;</span><br><span class="line">[HAVING &lt;expression&gt; [&#123;&lt;operator&gt; &lt;expression&gt;&#125;…]]</span><br><span class="line">[ORDER BY &lt;order by definition&gt;]</span><br><span class="line">[LIMIT[&lt;offset&gt;,] &lt;row count&gt;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li><code>&#123;*|&lt;字段列名&gt;&#125;</code>包含星号通配符的字段列表，表示查询的字段，其中字段列至少包含一个字段名称，如果要查询多个字段，多个字段之间要用逗号隔开，最后一个字段后不要加逗号。</li><li><code>FROM &lt;表 1&gt;，&lt;表 2&gt;…</code>，表 1 和表 2 表示查询数据的来源，可以是单个或多个。</li><li>WHERE 子句是可选项，如果选择该项，将限定查询行必须满足的查询条件。</li><li><code>GROUP BY&lt; 字段 &gt;</code>，该子句告诉 MySQL 如何显示查询出来的数据，并按照指定的字段分组。</li><li><code>HAVING &lt;表达式&gt;</code>，该子句用于指定一组行或聚合的过滤条件，通常和<code>GROUP BY</code>一起使用。</li><li><code>[ORDER BY&lt; 字段 &gt;]</code>，该子句告诉 MySQL 按什么样的顺序显示查询出来的数据，可以进行的排序有升序（ASC）和降序（DESC）。</li><li><code>[LIMIT[，]]</code>，该子句告诉 MySQL 每次显示查询出来的数据条数。</li></ul><h3 id="1-数据检索（SELECT）"><a href="#1-数据检索（SELECT）" class="headerlink" title="1. 数据检索（SELECT）"></a>1. 数据检索（SELECT）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 检索单个列</span><br><span class="line">SELECT prod_name FROM products;</span><br><span class="line">-- 检索多个列</span><br><span class="line">SELECT prod_id, prod_name, prod_price FROM products;</span><br><span class="line">-- 检索所有列</span><br><span class="line">SELECT * FROM products;</span><br><span class="line">-- 检索不同的行(去重)</span><br><span class="line">SELECT DISTINCT vend_id FROM products;</span><br><span class="line">-- 限制结果(LIMIT)</span><br><span class="line">SELECT prod_name FROM products LIMIT 5;</span><br><span class="line">-- 使用完全限制的表名,列名</span><br><span class="line">SELECT products.prod_name FROM crashcourse.products;</span><br></pre></td></tr></table></figure><h3 id="2-数据排序（ORDER-BY）"><a href="#2-数据排序（ORDER-BY）" class="headerlink" title="2. 数据排序（ORDER BY）"></a>2. 数据排序（ORDER BY）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">   select_list</span><br><span class="line">FROM </span><br><span class="line">   table_name</span><br><span class="line">ORDER BY </span><br><span class="line">   column1 [ASC|DESC], </span><br><span class="line">   column2 [ASC|DESC],</span><br><span class="line">   ...;</span><br></pre></td></tr></table></figure><h3 id="3-数据过滤（WHERE）"><a href="#3-数据过滤（WHERE）" class="headerlink" title="3. 数据过滤（WHERE）"></a>3. 数据过滤（WHERE）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">    select_list</span><br><span class="line">FROM</span><br><span class="line">    table_name</span><br><span class="line">WHERE</span><br><span class="line">    search_condition;</span><br></pre></td></tr></table></figure><table><thead><tr><th>比较运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=&gt;</td><td>安全的等于，不会返回 UNKNOWN</td></tr><tr><td>&lt;&gt; 或!=</td><td>不等于</td></tr><tr><td>IS NULL 或 ISNULL</td><td>判断一个值是否为 NULL</td></tr><tr><td>IS NOT NULL</td><td>判断一个值是否不为 NULL</td></tr><tr><td>LEAST</td><td>当有两个或多个参数时，返回最小值</td></tr><tr><td>GREATEST</td><td>当有两个或多个参数时，返回最大值</td></tr><tr><td>BETWEEN value1 AND value2</td><td>判断一个值是否落在两个值之间</td></tr><tr><td>IN</td><td>判断一个值是IN列表中的任意一个值</td></tr><tr><td>NOT IN</td><td>判断一个值不是IN列表中的任意一个值</td></tr><tr><td>LIKE</td><td>通配符匹配</td></tr><tr><td>REGEXP</td><td>正则表达式匹配</td></tr></tbody></table><h3 id="4-数据分组（GROUP-BY-和-HAVING）"><a href="#4-数据分组（GROUP-BY-和-HAVING）" class="headerlink" title="4. 数据分组（GROUP BY 和 HAVING）"></a>4. 数据分组（GROUP BY 和 HAVING）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 检索总计订单价格大于等于50的订单号和总计订单的价格，按总计订单价格排序。</span><br><span class="line">-- GROUP BY 子句按订单号分组数据，以便SUM(*)函数能够返回总计订单价格</span><br><span class="line">-- HAVING 子句过滤数据，只返回总计订单价格大于等于50的订单</span><br><span class="line">-- ORDER BY 子句排序输出</span><br><span class="line">SELECT order_num, SUM(quantity * item_price) AS ordertotal</span><br><span class="line">FROM orderitems</span><br><span class="line">GROUP BY order_num</span><br><span class="line">HAVING SUM(quantity * item_price) &gt;&#x3D; 50;</span><br><span class="line">ORDER BY ordertotal;</span><br></pre></td></tr></table></figure><blockquote><p><strong>HAVING 和 WHERE 的差别</strong></p><p>WHERE 在数据分组前进行过滤，HAVING 在数据分组后进行过滤。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-数据库（DATABASE）的创建、删除、修改和查看&quot;&gt;&lt;a href=&quot;#1-数据库（DATABASE）的创建、删除、修改和查看&quot; class=&quot;headerlink&quot; title=&quot;1. 数据库（DATABASE）的创建、删除、修改和查看&quot;&gt;&lt;/a&gt;1. 数据库（DATABASE）的创建、删除、修改和查看&lt;/h2&gt;&lt;h3 id=&quot;创建数据库：&quot;&gt;&lt;a href=&quot;#创建数据库：&quot; class=&quot;headerlink&quot; title=&quot;创建数据库：&quot;&gt;&lt;/a&gt;创建数据库：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE DATABASE [IF NOT EXISTS] &amp;lt;数据库名&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	[[DEFAULT] CHARACTER SET &amp;lt;字符集名&amp;gt;] [[DEFAULT] COLLATE &amp;lt;校对规则名&amp;gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="tech" scheme="https://yingming006.cn/categories/tech/"/>
    
    
    <category term="mysql" scheme="https://yingming006.cn/tags/mysql/"/>
    
  </entry>
  
</feed>
